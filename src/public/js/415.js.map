{"version":3,"sources":["webpack:///./resources/js/Components/Layout/Headers/DefaultHeader.tsx","webpack:///./resources/js/Pages/Admin/Users/Index.tsx"],"names":["headerBg","title","className","fluid","lg","md","roles","useState","data","undefined","sizePerPage","page","totalSize","state","setState","useEffect","sortField","sortOrder","then","value","prevState","e","console","error","pagination","useMemo","alwaysShowAllBtns","showTotal","withFirstAndLast","sizePerPageRenderer","onSizePerPageChange","id","name","onChange","target","columns","dataField","text","sort","filter","formatter","_","row","role","options","isDummyField","headerStyle","width","href","placement","as","method","preserveState","pills","tag","keyField","remote","bootstrap4","bordered","defaultSorted","order","onTableChange","newState","filters","overlay","spinner"],"mappings":"qJAiCA,QAzBuC,SAAC,G,IAAEA,EAAQ,WAAEC,EAAK,QACrD,OACI,gCACI,uBACIC,UAAW,uDACPF,UAAY,0BAGhB,gBAAC,IAAS,CACNE,UAAU,wCACVC,OAAK,GAEL,gBAAC,IAAG,CAACD,UAAU,eACX,gBAAC,IAAG,CAACE,GAAG,IAAIC,GAAG,MACX,sBAAIH,UAAU,wBACTD,UAAS,Y,+fCwP1C,QAvN+B,SAAC,G,IAAEK,EAAK,QAC7B,GAAoB,IAAAC,UAAgB,CACtCC,UAAMC,EACNC,YAAa,GACbC,KAAM,EACNC,UAAW,IAJRC,EAAK,KAAEC,EAAQ,KAOdN,EAAuCK,EAAnC,KAAEH,EAAiCG,EAAtB,YAAEF,EAAoBE,EAAhB,KAAED,EAAcC,EAAL,WAE1C,IAAAE,YAAU,gBACON,IAATD,GACA,SACiB,IAAM,qBAAsB,CACrCQ,UAAW,aACXC,UAAW,SAEdC,MAAK,SAACC,GACHL,GAAS,SAACM,GAAc,cACjBA,GACAD,EAFiB,YANhC,OAWW,SAACE,GACJC,QAAQC,MAAMF,QAG3B,IAEH,IAAMG,GAAa,IAAAC,UACf,WACI,eAAkB,CACdd,KAAI,EACJC,UAAS,EACTF,YAAW,EACXgB,mBAAmB,EACnBC,WAAW,EACXC,kBAAkB,EAClBC,oBAAqB,SAAC,G,IAClBC,EAAmB,sBACW,OAC9B,uBACI5B,UAAU,oBACV6B,GAAG,0BAEH,6B,OACS,IAED,0BACIC,KAAK,yBAAwB,gBACf,kBACd9B,UAAU,+BACV+B,SAAU,SAACZ,GACP,OAAAS,GAAqBT,EAAEa,OAAOf,MAAO,KAGzC,0BAAQA,MAAM,MAAI,MAClB,0BAAQA,MAAM,MAAI,MAClB,0BAAQA,MAAM,MAAI,MAClB,0BAAQA,MAAM,OAAK,QAEzB,IAEE,kBAIxB,CAACR,EAAMC,EAAWF,IAGhByB,EAA+B,CACjC,CACIC,UAAW,OACXC,KAAM,OACNC,MAAM,EACNC,QAAQ,QAAW,CACfrC,UAAW,qBAGnB,CACIkC,UAAW,UACXC,KAAM,OACNC,MAAM,EACNE,UAAW,SAACC,EAAGC,GAAQ,OAAAA,EAAIC,KAAJ,MACvBJ,QAAQ,QAAa,CACjBK,QAAStC,EACTJ,UAAW,qBAGnB,CACIkC,UAAW,aACXC,KAAM,aACNC,MAAM,EACNE,UAAW,SAACC,EAAGC,GAAQ,OAAAA,EAAA,sBAE3B,CACIN,UAAW,UACXS,cAAc,EACdR,KAAM,GACNC,MAAM,EACNQ,YAAa,CACTC,MAAO,SAEXP,UAAW,SAACC,EAAGC,GACX,OACI,gCACI,gBAAC,KAAW,CACRX,GAAI,aAAaW,EAAIX,GACrBiB,KAAM,IAAM,mBAAoBN,EAAIX,IACpC7B,UAAU,uBAEV,qBAAGA,UAAU,uBAEjB,gBAAC,IAAmB,CAChB+C,UAAU,OACVf,OAAQ,aAAaQ,EAAIX,IAAI,QAIjC,gBAAC,KAAW,CACRA,GAAI,eAAeW,EAAIX,GACvBmB,GAAG,SACHC,OAAO,SACPH,KAAM,IAAM,sBAAuBN,EAAIX,IACvC7B,UAAU,sBACVkD,eAAe,GAEf,qBAAGlD,UAAU,8BAEjB,gBAAC,IAAmB,CAChB+C,UAAU,OACVf,OAAQ,eAAeQ,EAAIX,IAAI,cAUvD,OACI,gCACI,gBAAC,IAAM,CAAC9B,MAAM,UACd,gBAAC,IAAS,CAACC,UAAU,QAAQC,OAAK,GAC9B,gBAAC,IAAG,CAACD,UAAU,QACX,gBAAC,IAAG,CAACE,GAAI,GAAIF,UAAU,cACnB,gBAAC,IAAG,CACAA,UAAU,mDACVmD,OAAK,GAEL,gBAAC,IAAO,CAACnD,UAAU,eACf,gBAAC,IAAO,CACJA,UAAU,kBACVoD,IAAK,KACLN,KAAM,IAAM,uBAEZ,qBAAG9C,UAAU,4BAEP,gBAK1B,gBAAC,IAAI,CAACA,UAAU,UACZ,gBAAC,IAAQ,KACL,uBAAKA,UAAU,QACX,gBAAC,IAAc,CACXqD,SAAS,KACT/C,KAAMA,UAAQ,GACd2B,QAASA,EACTqB,QAAM,EACNC,YAAU,EACVjC,WAAYA,EACZe,QAAQ,UACRmB,UAAU,EACVC,cAAe,CACX,CACIvB,UAAW,aACXwB,MAAO,SAGfC,cAAe,SAACpB,EAAGqB,GACf,SAEQ,IAAM,qBACN,CACInD,KAAMmD,EAASnD,KACfD,YACIoD,EAASpD,YACbM,UAAW8C,EAAS9C,UACpBC,UAAW6C,EAAS7C,UACpB8C,QAASD,EAASC,UAGzB7C,MAAK,SAACC,GACHL,GAAS,SAACM,GAAc,cACjBA,GACAD,EAFiB,YAbhC,OAkBW,SAACE,GACJC,QAAQC,MAAMF,OAG1B2C,SAAS,OAAe,CAAEC,SAAS","file":"js/415.js?id=af639814d70e0830ac23","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\ninterface Props {\n    headerBg?: string;\n    title?: React.ReactNode;\n}\n\nconst DefaultHeader: React.FC<Props> = ({ headerBg, title }: Props) => {\n    return (\n        <>\n            <div\n                className={`header pb-8 pt-5 pt-lg-8 d-flex align-items-center ${\n                    headerBg ?? \"bg-gradient-gray-dark\"\n                }`}\n            >\n                <Container\n                    className=\"d-flex align-items-center flex-grow-1\"\n                    fluid\n                >\n                    <Row className=\"flex-grow-1\">\n                        <Col lg=\"7\" md=\"10\">\n                            <h1 className=\"display-2 text-white\">\n                                {title ?? \" \"}\n                            </h1>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n};\n\nexport default DefaultHeader;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport Header from \"../../../Components/Layout/Headers/DefaultHeader\";\nimport {\n    Card,\n    CardBody,\n    Col,\n    Container,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n    UncontrolledTooltip,\n} from \"reactstrap\";\nimport type { CommonPageProps } from \"../../../Types/page\";\nimport BootstrapTable, {\n    ColumnDescription,\n    SizePerPageRendererOptions,\n} from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory, {\n    selectFilter,\n    textFilter,\n} from \"react-bootstrap-table2-filter\";\nimport axios from \"axios\";\n// @ts-ignore\nimport overlayFactory from \"react-bootstrap-table2-overlay\";\nimport route from \"ziggy-js\";\nimport { InertiaLink } from \"@inertiajs/inertia-react\";\n\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\n\ninterface User {\n    id: number;\n    name: string;\n    email: string;\n    role: {\n        id: number;\n        name: string;\n    };\n    readable_created_at: string;\n}\n\ninterface State {\n    data?: User[];\n    sizePerPage: number;\n    page: number;\n    totalSize: number;\n}\n\ninterface Props extends CommonPageProps {\n    roles: { value: number; label: string }[];\n}\n\nconst Index: React.FC<Props> = ({ roles }: Props) => {\n    const [state, setState] = useState<State>({\n        data: undefined,\n        sizePerPage: 10,\n        page: 1,\n        totalSize: 0,\n    });\n\n    const { data, sizePerPage, page, totalSize } = state;\n\n    useEffect(() => {\n        if (data === undefined) {\n            axios\n                .post<State>(route(\"admin.users.table\"), {\n                    sortField: \"created_at\",\n                    sortOrder: \"desc\",\n                })\n                .then((value) => {\n                    setState((prevState) => ({\n                        ...prevState,\n                        ...value.data,\n                    }));\n                })\n                .catch((e) => {\n                    console.error(e);\n                });\n        }\n    }, []);\n\n    const pagination = useMemo(\n        () =>\n            paginationFactory({\n                page,\n                totalSize,\n                sizePerPage,\n                alwaysShowAllBtns: true,\n                showTotal: true,\n                withFirstAndLast: false,\n                sizePerPageRenderer: ({\n                    onSizePerPageChange,\n                }: SizePerPageRendererOptions) => (\n                    <div\n                        className=\"dataTables_length\"\n                        id=\"datatable-basic_length\"\n                    >\n                        <label>\n                            Show{\" \"}\n                            {\n                                <select\n                                    name=\"datatable-basic_length\"\n                                    aria-controls=\"datatable-basic\"\n                                    className=\"form-control form-control-sm\"\n                                    onChange={(e) =>\n                                        onSizePerPageChange(+e.target.value, 1)\n                                    }\n                                >\n                                    <option value=\"10\">10</option>\n                                    <option value=\"25\">25</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                </select>\n                            }{\" \"}\n                            entries.\n                        </label>\n                    </div>\n                ),\n            }),\n        [page, totalSize, sizePerPage]\n    );\n\n    const columns: ColumnDescription[] = [\n        {\n            dataField: \"name\",\n            text: \"Name\",\n            sort: true,\n            filter: textFilter({\n                className: \"form-control-sm\",\n            }),\n        },\n        {\n            dataField: \"role.id\",\n            text: \"Role\",\n            sort: true,\n            formatter: (_, row) => row.role.name,\n            filter: selectFilter({\n                options: roles,\n                className: \"form-control-sm\",\n            }),\n        },\n        {\n            dataField: \"created_at\",\n            text: \"Created at\",\n            sort: true,\n            formatter: (_, row) => row.readable_created_at,\n        },\n        {\n            dataField: \"actions\",\n            isDummyField: true,\n            text: \"\",\n            sort: false,\n            headerStyle: {\n                width: \"120px\",\n            },\n            formatter: (_, row) => {\n                return (\n                    <>\n                        <InertiaLink\n                            id={`edit-link-${row.id}`}\n                            href={route(\"admin.users.edit\", row.id)}\n                            className=\"btn btn-sm btn-link\"\n                        >\n                            <i className=\"fas fa-pencil-alt\" />\n                        </InertiaLink>\n                        <UncontrolledTooltip\n                            placement=\"auto\"\n                            target={`edit-link-${row.id}`}\n                        >\n                            Edit\n                        </UncontrolledTooltip>\n                        <InertiaLink\n                            id={`delete-link-${row.id}`}\n                            as=\"button\"\n                            method=\"delete\"\n                            href={route(\"admin.users.destroy\", row.id)}\n                            className=\"btn btn-sm btn-link\"\n                            preserveState={false}\n                        >\n                            <i className=\"fas fa-trash text-danger\" />\n                        </InertiaLink>\n                        <UncontrolledTooltip\n                            placement=\"auto\"\n                            target={`delete-link-${row.id}`}\n                        >\n                            Delete\n                        </UncontrolledTooltip>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Header title=\"Users\" />\n            <Container className=\"mt--7\" fluid>\n                <Row className=\"mb-2\">\n                    <Col lg={12} className=\"text-right\">\n                        <Nav\n                            className=\"nav-fill flex-column-reverse flex-sm-row-reverse\"\n                            pills\n                        >\n                            <NavItem className=\"flex-grow-0\">\n                                <NavLink\n                                    className=\"mb-sm-3 mb-md-0\"\n                                    tag={InertiaLink}\n                                    href={route(\"admin.users.create\")}\n                                >\n                                    <i className=\"fas fa-plus-square mr-2\" />\n                                    New user\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Col>\n                </Row>\n                <Card className=\"shadow\">\n                    <CardBody>\n                        <div className=\"py-4\">\n                            <BootstrapTable\n                                keyField=\"id\"\n                                data={data ?? []}\n                                columns={columns}\n                                remote\n                                bootstrap4\n                                pagination={pagination}\n                                filter={filterFactory()}\n                                bordered={false}\n                                defaultSorted={[\n                                    {\n                                        dataField: \"created_at\",\n                                        order: \"desc\",\n                                    },\n                                ]}\n                                onTableChange={(_, newState) => {\n                                    axios\n                                        .post<State>(\n                                            route(\"admin.users.table\"),\n                                            {\n                                                page: newState.page,\n                                                sizePerPage:\n                                                    newState.sizePerPage,\n                                                sortField: newState.sortField,\n                                                sortOrder: newState.sortOrder,\n                                                filters: newState.filters,\n                                            }\n                                        )\n                                        .then((value) => {\n                                            setState((prevState) => ({\n                                                ...prevState,\n                                                ...value.data,\n                                            }));\n                                        })\n                                        .catch((e) => {\n                                            console.error(e);\n                                        });\n                                }}\n                                overlay={overlayFactory({ spinner: true })}\n                            />\n                        </div>\n                    </CardBody>\n                </Card>\n            </Container>\n        </>\n    );\n};\n\nexport default Index;\n"],"sourceRoot":""}