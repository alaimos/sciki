{"version":3,"sources":["webpack:///./resources/js/Modules/Simulations/WikiPlugins/PathwaysTable.tsx"],"names":["SearchBar","simulation","pathways","sortable","filterable","enableId","defaultSorting","dataField","order","onView","useState","data","undefined","state","setState","error","message","useEffect","filters","then","Object","values","e","columns","text","sort","classes","formatter","_","row","pathwayActivityScore","toFixed","averagePathwayPerturbation","pathwayPValue","pathwayFDR","unshift","push","isDummyField","headerStyle","width","className","href","onClick","preventDefault","stopPropagation","pathwayId","selectRow","mode","clickToSelect","hideSelectAll","onSelect","pagination","useMemo","alwaysShowAllBtns","showTotal","withFirstAndLast","sizePerPageRenderer","onSizePerPageChange","id","name","onChange","target","value","keyField","search","props","placeholder","searchProps","baseProps","bootstrap4","filter","bordered","defaultSorted"],"mappings":"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","file":"js/395.js?id=23f9ef7ca898ea0f4bb5","sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport BootstrapTable, {\n    ColumnDescription,\n    SelectRowProps,\n    SizePerPageRendererOptions,\n    SortOrder,\n} from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory from \"react-bootstrap-table2-filter\";\nimport ToolkitProvider, {\n    Search,\n    ToolkitContextType,\n} from \"react-bootstrap-table2-toolkit\";\nimport axios from \"axios\";\nimport route from \"ziggy-js\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\n\ninterface Props {\n    simulation: number;\n    pathways?: string[];\n    sortable?: boolean;\n    filterable?: boolean;\n    enableId?: boolean;\n    defaultSorting?: { dataField: keyof Pathway; order: SortOrder };\n    onSelect?: (pathway: string) => void;\n    onView?: (pathway: string) => void;\n}\n\nexport interface Pathway {\n    pathwayId: string;\n    pathwayName: string;\n    averagePathwayPerturbation: number;\n    pathwayActivityScore: number;\n    pathwayPValue: number;\n    pathwayFDR: number;\n}\n\ninterface State {\n    data?: Pathway[];\n    error?: boolean;\n    message?: string;\n}\n\nconst { SearchBar } = Search;\n\nconst PathwaysTable: React.FC<Props> = ({\n    simulation,\n    pathways,\n    sortable = true,\n    filterable = true,\n    enableId = false,\n    defaultSorting = {\n        dataField: \"pathwayFDR\",\n        order: \"asc\",\n    },\n    onSelect,\n    onView,\n}: Props) => {\n    const [state, setState] = useState<State>({\n        data: undefined,\n    });\n\n    const { data, error, message } = state;\n\n    useEffect(() => {\n        const filters = pathways ? { pathways } : {};\n        axios\n            .post<Record<string, Pathway>>(\n                route(\"simulations.plugins.pathwaysTable\", simulation),\n                filters\n            )\n            .then(({ data }) => {\n                setState({\n                    data: Object.values(data),\n                });\n            })\n            .catch((e) => {\n                setState({\n                    error: true,\n                    message: e.message,\n                });\n            });\n    }, [simulation, pathways]);\n\n    const columns: ColumnDescription[] = [\n        {\n            dataField: \"pathwayName\",\n            text: \"Name\",\n            sort: sortable,\n            classes: \"text-truncate\",\n        },\n        {\n            dataField: \"pathwayActivityScore\",\n            text: \"Activity Score\",\n            sort: sortable,\n            classes: \"text-truncate\",\n            formatter: (_, row) => row.pathwayActivityScore.toFixed(4),\n        },\n        {\n            dataField: \"averagePathwayPerturbation\",\n            text: \"Perturbation\",\n            sort: sortable,\n            classes: \"text-truncate\",\n            formatter: (_, row) => row.averagePathwayPerturbation.toFixed(4),\n        },\n        {\n            dataField: \"pathwayPValue\",\n            text: \"p-value\",\n            sort: sortable,\n            classes: \"text-truncate\",\n            formatter: (_, row) =>\n                row.pathwayPValue < 0.0001\n                    ? \"< 0.0001\"\n                    : row.pathwayPValue.toFixed(4),\n        },\n        {\n            dataField: \"pathwayFDR\",\n            text: \"FDR\",\n            sort: sortable,\n            classes: \"text-truncate\",\n            formatter: (_, row) =>\n                row.pathwayPValue < 0.0001\n                    ? \"< 0.0001\"\n                    : row.pathwayFDR.toFixed(4),\n        },\n    ];\n    if (enableId) {\n        columns.unshift({\n            dataField: \"pathwayId\",\n            text: \"Id\",\n            sort: sortable,\n        });\n    }\n    if (onView) {\n        columns.push({\n            dataField: \"view\",\n            isDummyField: true,\n            text: \"\",\n            headerStyle: {\n                width: \"60px\",\n            },\n            formatter: (_, row) => (\n                <a\n                    className=\"btn btn-sm btn-link\"\n                    href=\"#\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        onView(row.pathwayId);\n                    }}\n                >\n                    <i className=\"fas fa-eye fa-fw\" />\n                </a>\n            ),\n        });\n    }\n    const selectRow: SelectRowProps<Pathway> | undefined = onSelect\n        ? {\n              mode: \"checkbox\",\n              clickToSelect: true,\n              hideSelectAll: true,\n              onSelect: (row) => onSelect(row.pathwayId),\n          }\n        : undefined;\n\n    const pagination = useMemo(\n        () =>\n            paginationFactory({\n                alwaysShowAllBtns: true,\n                showTotal: true,\n                withFirstAndLast: false,\n                sizePerPageRenderer: ({\n                    onSizePerPageChange,\n                }: SizePerPageRendererOptions) => (\n                    <div\n                        className=\"dataTables_length\"\n                        id=\"datatable-basic_length\"\n                    >\n                        <label>\n                            Show{\" \"}\n                            {\n                                <select\n                                    name=\"datatable-basic_length\"\n                                    aria-controls=\"datatable-basic\"\n                                    className=\"form-control form-control-sm\"\n                                    onChange={(e) =>\n                                        onSizePerPageChange(+e.target.value, 1)\n                                    }\n                                >\n                                    <option value=\"10\">10</option>\n                                    <option value=\"25\">25</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                </select>\n                            }{\" \"}\n                            entries.\n                        </label>\n                    </div>\n                ),\n            }),\n        [simulation, pathways, sortable]\n    );\n\n    if (error) {\n        return <p className=\"text-red\">{message}</p>;\n    }\n\n    return (\n        <ToolkitProvider\n            keyField=\"pathwayId\"\n            data={data ?? []}\n            columns={columns}\n            search\n        >\n            {(props: ToolkitContextType) => (\n                <div className=\"py-4\">\n                    {filterable && (\n                        <div className=\"dataTables_filter px-4 pb-1\">\n                            <label>\n                                Search:\n                                <SearchBar\n                                    className=\"form-control-sm\"\n                                    placeholder=\"\"\n                                    {...props.searchProps}\n                                />\n                            </label>\n                        </div>\n                    )}\n                    <BootstrapTable\n                        {...props.baseProps}\n                        bootstrap4\n                        pagination={pagination}\n                        filter={filterFactory()}\n                        bordered={false}\n                        defaultSorted={[defaultSorting]}\n                        selectRow={selectRow}\n                    />\n                </div>\n            )}\n        </ToolkitProvider>\n    );\n};\n\nexport default PathwaysTable;\n"],"sourceRoot":""}