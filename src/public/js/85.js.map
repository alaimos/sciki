{"version":3,"sources":["webpack:///./resources/js/Modules/Simulations/WikiPlugins/PathwayImage.tsx"],"names":["simulation","pathway","position","legend","useState","state","setState","shown","setShown","data","error","message","useEffect","then","e","response","toggleModal","prevState","className","includes","figure","fig_left","fig_right","href","onClick","preventDefault","src","alt","style","width","isOpen","toggle","maxWidth","id","type","color"],"mappings":"4NAmKA,QAhJsC,SAAC,G,IACnCA,EAAU,aACVC,EAAO,UACP,IAAAC,gBAAQ,IAAG,WAAQ,EACnBC,EAAM,SAEA,GAAoB,IAAAC,UAAgB,IAAnCC,EAAK,KAAEC,EAAQ,KAChB,GAAoB,IAAAF,WAAS,GAA5BG,EAAK,KAAEC,EAAQ,KAEdC,EAAyBJ,EAArB,KAAEK,EAAmBL,EAAd,MAAEM,EAAYN,EAAL,SAE5B,IAAAO,YAAU,WACFX,GACA,SAEQ,IAAM,mCAAoCD,GAC1C,CAAEC,QAAO,IAEZY,MAAK,SAAC,G,IAAEJ,EAAI,OACTH,EAASG,MANjB,OAQW,SAACK,G,MACJR,EAAS,CACLI,OAAO,EACPC,QAAgC,QAAvB,EAAAG,EAAEC,SAASN,KAAKE,eAAO,QAAIG,EAAEH,eAIvD,CAACX,EAAYC,IAEhB,IAAMe,EAAc,WAAM,OAAAR,GAAS,SAACS,GAAc,aAElD,OAAKhB,EAMDS,EACO,qBAAGQ,UAAU,YAAYP,GAIhC,kCACOF,GACC,gCACK,CAAC,OAAQ,SAASU,SAASjB,IACxB,uBACIgB,UAAW,IAAW,CAClBE,QAAQ,EACRC,SAAuB,SAAbnB,EACVoB,UAAwB,UAAbpB,KAGf,uBAAKgB,UAAU,iBACX,qBACIK,KAAK,IACLL,UAAU,MACVM,QAAS,SAACV,GACNA,EAAEW,iBACFjB,GAAS,KAGb,uBAAKkB,IAAKjB,EAAMkB,IAAK1B,KAEzB,uBAAKiB,UAAU,eAAef,KAI5B,WAAbD,GACG,uBAAKgB,UAAU,iCACX,uBAAKA,UAAU,SAASU,MAAO,CAAEC,MAAO,QACpC,uBAAKX,UAAU,iBACX,qBACIK,KAAK,IACLL,UAAU,MACVM,QAAS,SAACV,GACNA,EAAEW,iBACFjB,GAAS,KAGb,uBACIkB,IAAKjB,EACLkB,IAAK1B,EACLiB,UAAU,cAGlB,uBAAKA,UAAU,eAAef,MAK9C,gBAAC,IAAK,CACFe,UAAU,wBACVY,OAAQvB,EACRwB,OAAQ,WAAM,OAAAf,KACdY,MAAO,CACHI,SAAU,UAGd,uBAAKd,UAAU,gBACX,sBAAIA,UAAU,cAAce,GAAG,qBAC1B9B,GAEL,uCACe,QACXe,UAAU,QAAO,eACJ,QACbgB,KAAK,SACLV,QAAS,WAAM,OAAAR,MAEf,uCAAmB,GAAI,OAG/B,uBAAKE,UAAU,cACX,uBACIQ,IAAKjB,EACLkB,IAAK1B,EACL2B,MAAO,CAAEC,MAAO,WAGxB,uBAAKX,UAAU,gBACX,gBAAC,IAAM,CACHiB,MAAM,UAAS,eACF,QACbD,KAAK,SACLV,QAAS,WAAM,OAAAR,MAAa,aAQ9CP,GACE,gBAAC,IAAK,CAAC0B,MAAM,WACT,qBAAGjB,UAAU,qCAET,mCAxGZ,gBAAC,IAAK,CAACiB,MAAM,WAAS","file":"js/85.js?id=aacef5fbeadddfb1e13a","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport route from \"ziggy-js\";\nimport { Alert, Button, Modal } from \"reactstrap\";\nimport classNames from \"classnames\";\n\ninterface Props {\n    simulation: number;\n    pathway?: string;\n    legend?: string;\n    position?: \"left\" | \"center\" | \"right\";\n}\n\ninterface State {\n    data?: string;\n    error?: boolean;\n    message?: string;\n}\n\nconst PathwayImage: React.FC<Props> = ({\n    simulation,\n    pathway,\n    position = \"center\",\n    legend,\n}: Props) => {\n    const [state, setState] = useState<State>({});\n    const [shown, setShown] = useState(false);\n\n    const { data, error, message } = state;\n\n    useEffect(() => {\n        if (pathway) {\n            axios\n                .post<{ data: string }>(\n                    route(\"simulations.plugins.pathwayImage\", simulation),\n                    { pathway }\n                )\n                .then(({ data }) => {\n                    setState(data);\n                })\n                .catch((e) => {\n                    setState({\n                        error: true,\n                        message: e.response.data.message ?? e.message,\n                    });\n                });\n        }\n    }, [simulation, pathway]);\n\n    const toggleModal = () => setShown((prevState) => !prevState);\n\n    if (!pathway) {\n        return (\n            <Alert color=\"warning\">Select a pathway to view its image.</Alert>\n        );\n    }\n\n    if (error) {\n        return <p className=\"text-red\">{message}</p>;\n    }\n\n    return (\n        <>\n            {!!data && (\n                <>\n                    {[\"left\", \"right\"].includes(position) && (\n                        <div\n                            className={classNames({\n                                figure: true,\n                                fig_left: position === \"left\",\n                                fig_right: position === \"right\",\n                            })}\n                        >\n                            <div className=\"fig_container\">\n                                <a\n                                    href=\"#\"\n                                    className=\"fig\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setShown(true);\n                                    }}\n                                >\n                                    <img src={data} alt={pathway} />\n                                </a>\n                                <div className=\"fig_caption\">{legend}</div>\n                            </div>\n                        </div>\n                    )}\n                    {position === \"center\" && (\n                        <div className=\"d-flex justify-content-center\">\n                            <div className=\"figure\" style={{ width: \"50%\" }}>\n                                <div className=\"fig_container\">\n                                    <a\n                                        href=\"#\"\n                                        className=\"fig\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setShown(true);\n                                        }}\n                                    >\n                                        <img\n                                            src={data}\n                                            alt={pathway}\n                                            className=\"centered\"\n                                        />\n                                    </a>\n                                    <div className=\"fig_caption\">{legend}</div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    <Modal\n                        className=\"modal-dialog-centered\"\n                        isOpen={shown}\n                        toggle={() => toggleModal()}\n                        style={{\n                            maxWidth: \"100vw\",\n                        }}\n                    >\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                                {legend}\n                            </h5>\n                            <button\n                                aria-label=\"Close\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={() => toggleModal()}\n                            >\n                                <span aria-hidden={true}>Ã—</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <img\n                                src={data}\n                                alt={pathway}\n                                style={{ width: \"100%\" }}\n                            />\n                        </div>\n                        <div className=\"modal-footer\">\n                            <Button\n                                color=\"primary\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={() => toggleModal()}\n                            >\n                                Close\n                            </Button>\n                        </div>\n                    </Modal>\n                </>\n            )}\n            {!data && (\n                <Alert color=\"primary\">\n                    <i className=\"fas fa-circle-notch fa-spin mx-2\" />\n                    Building image. Please wait...\n                </Alert>\n            )}\n        </>\n    );\n};\n\nexport default PathwayImage;\n"],"sourceRoot":""}