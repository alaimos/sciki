{"version":3,"sources":["webpack:///./resources/js/Modules/Simulations/WikiPlugins/SimulationHeatmap.tsx"],"names":["simulation","title","height","type","mode","selection","sortBy","n","absolute","limit","attach","useState","state","setState","data","error","message","useEffect","sort_by","then","e","response","className","colorscale","layout","font","size","autosize","config","responsive","style","width","useResizeHandler","color"],"mappings":"6YA+HA,QA3F2C,SAAC,G,IACxCA,EAAU,aACVC,EAAK,QACL,IAAAC,cAAM,IAAG,MAAG,EACZ,IAAAC,YAAI,IAAG,aAAU,EACjB,IAAAC,YAAI,IAAG,QAAK,EACZC,EAAS,YACT,IAAAC,cAAM,IAAG,iBAAc,EACvB,IAAAC,SAAC,IAAG,KAAE,EACN,IAAAC,gBAAQ,IAAG,GAAK,EAChB,IAAAC,aAAK,IAAG,SAAM,EACd,IAAAC,cAAM,IAAG,KAAE,EAEL,GAAoB,IAAAC,UAAgB,IAAnCC,EAAK,KAAEC,EAAQ,KAEdC,EAAyBF,EAArB,KAAEG,EAAmBH,EAAd,MAAEI,EAAYJ,EAAL,QAyB5B,OAvBA,IAAAK,YAAU,WACN,SACgB,IAAM,8BAA+BjB,GAAa,CAC1DG,KAAI,EACJC,KAAI,EACJC,UAAS,EACTa,QAASZ,EACTC,EAAC,EACDC,SAAQ,EACRC,MAAK,EACLC,OAAM,IAETS,MAAK,SAAC,G,IAAEL,EAAI,OACTD,EAAS,CAAEC,KAAI,OAZvB,OAcW,SAACM,G,MACJP,EAAS,CACLE,OAAO,EACPC,QAAgC,QAAvB,EAAAI,EAAEC,SAASP,KAAKE,eAAO,QAAII,EAAEJ,eAGnD,CAAChB,EAAYG,EAAMC,EAAMC,EAAWC,EAAQC,EAAGC,EAAUC,EAAOC,IAE/DK,EACO,qBAAGO,UAAU,YAAYN,GAIhC,kCACOF,GACC,gCACI,uBAAKQ,UAAU,sBACX,gBAAC,IAAI,CACDR,KAAM,C,OAEKA,GAAI,CACPX,KAAM,UACNoB,WAAY,CACR,CAAC,EAAG,iBACJ,CAAC,IAAM,oBACP,CAAC,GAAK,oBACN,CAAC,GAAK,oBACN,CAAC,GAAK,mBACN,CAAC,EAAG,sBAIhBC,OAAQ,CACJC,KAAM,CAAEC,KAAM,IACdC,UAAU,EACV1B,MAAK,GAET2B,OAAQ,CACJC,YAAY,GAEhBC,MAAO,CACHC,MAAO,OACP7B,OAAWA,EAAM,MAErB8B,kBAAgB,OAK9BlB,GACE,gBAAC,IAAK,CAACmB,MAAM,WACT,qBAAGX,UAAU,qCAET","file":"js/464.js?id=d779d8f78048f5d47a34","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport route from \"ziggy-js\";\nimport { Alert } from \"reactstrap\";\nimport Plot from \"react-plotly.js\";\n\ninterface Props {\n    simulation: number;\n    type?: \"pathways\" | \"nodes\";\n    mode?: \"top\" | \"selected\";\n    selection?: string[];\n    sortBy?: \"perturbation\" | \"activity\";\n    n?: number;\n    absolute?: boolean;\n    limit?: \"none\" | \"positive\" | \"negative\";\n    attach?: {\n        tags?: string[];\n        mode?: \"all\" | \"any\";\n        simulations?: string[];\n    };\n    title?: string;\n    height?: number;\n}\n\ninterface Data {\n    x: string[];\n    y: string[];\n    z: number[][];\n}\n\ninterface State {\n    data?: Data;\n    error?: boolean;\n    message?: string;\n}\n\nconst SimulationHeatmap: React.FC<Props> = ({\n    simulation,\n    title,\n    height = 600,\n    type = \"pathways\",\n    mode = \"top\",\n    selection,\n    sortBy = \"perturbation\",\n    n = 10,\n    absolute = false,\n    limit = \"none\",\n    attach = {},\n}: Props) => {\n    const [state, setState] = useState<State>({});\n\n    const { data, error, message } = state;\n\n    useEffect(() => {\n        axios\n            .post<Data>(route(\"simulations.plugins.heatmap\", simulation), {\n                type,\n                mode,\n                selection,\n                sort_by: sortBy,\n                n,\n                absolute,\n                limit,\n                attach,\n            })\n            .then(({ data }) => {\n                setState({ data });\n            })\n            .catch((e) => {\n                setState({\n                    error: true,\n                    message: e.response.data.message ?? e.message,\n                });\n            });\n    }, [simulation, type, mode, selection, sortBy, n, absolute, limit, attach]);\n\n    if (error) {\n        return <p className=\"text-red\">{message}</p>;\n    }\n\n    return (\n        <>\n            {!!data && (\n                <>\n                    <div className=\"d-flex flex-grow-1\">\n                        <Plot\n                            data={[\n                                {\n                                    ...data,\n                                    type: \"heatmap\",\n                                    colorscale: [\n                                        [0, \"rgb(5,10,172)\"],\n                                        [0.35, \"rgb(106,137,247)\"],\n                                        [0.5, \"rgb(255,255,255)\"],\n                                        [0.6, \"rgb(220,170,132)\"],\n                                        [0.7, \"rgb(230,145,90)\"],\n                                        [1, \"rgb(178,10,28)\"],\n                                    ],\n                                },\n                            ]}\n                            layout={{\n                                font: { size: 12 },\n                                autosize: true,\n                                title,\n                            }}\n                            config={{\n                                responsive: true,\n                            }}\n                            style={{\n                                width: \"100%\",\n                                height: `${height}px`,\n                            }}\n                            useResizeHandler\n                        />\n                    </div>\n                </>\n            )}\n            {!data && (\n                <Alert color=\"primary\">\n                    <i className=\"fas fa-circle-notch fa-spin mx-2\" />\n                    Building image. Please wait...\n                </Alert>\n            )}\n        </>\n    );\n};\n\nexport default SimulationHeatmap;\n"],"sourceRoot":""}