{"version":3,"sources":["webpack:///./resources/js/Components/Layout/Headers/DefaultHeader.tsx","webpack:///./resources/js/Components/Common/PagePreviewCard.tsx","webpack:///./resources/js/Pages/Wiki/Index.tsx"],"names":["headerBg","title","className","fluid","lg","md","pageSlug","previewImage","previewText","dark","Card","CardHeader","CardBody","src","thumbs","large","alt","legend","dangerouslySetInnerHTML","__html","href","props","Container","Row","featuredPage","Col","lastUpdatedPage","offset","size","page","featuredPagePreview","featuredPageImage","lastUpdatedPagePreview","lastUpdatedPageImage","lastCreatedPage","lastCreatedPagePreview","lastCreatedPageImage"],"mappings":"qJAiCA,QAzBuC,SAAC,G,IAAEA,EAAQ,WAAEC,EAAK,QACrD,OACI,gCACI,uBACIC,UAAW,uDACPF,UAAY,0BAGhB,gBAAC,IAAS,CACNE,UAAU,wCACVC,OAAK,GAEL,gBAAC,IAAG,CAACD,UAAU,eACX,gBAAC,IAAG,CAACE,GAAG,IAAIC,GAAG,MACX,sBAAIH,UAAU,wBACTD,UAAS,Y,0MC8C1C,QAtDyC,SAAC,G,IACtCA,EAAK,QACSK,EAAQ,YACtBC,EAAY,eACZC,EAAW,cACX,IAAAC,YAAI,IAAG,GAAK,EAEZ,OACI,gBAACC,EAAA,EAAI,CACDR,UAAW,IAAW,SAAU,CAC5B,mBAAoBO,KAGxB,gBAACE,EAAA,EAAU,CAACT,UAAU,kBAClB,sBACIA,UAAW,IAAW,CAClB,kBAAkB,EAClB,QAAQ,EACR,QAAQ,EACR,aAAcO,EACd,aAAcA,KAGjBR,IAGT,gBAACW,EAAA,EAAQ,CACLV,UAAW,IAAW,CAClB,aAAcO,OAGfF,GACC,uBACIM,IAAKN,EAAaO,OAAOC,MACzBC,IAAKT,EAAaU,OAClBf,UAAU,0DAGlB,uBACIA,UAAU,eACVgB,wBAAyB,CACrBC,OAAQX,KAGhB,2BACI,gBAAC,KAAW,CAACY,KAAM,IAAM,YAAad,IAAS,mBCYnE,QArD+B,SAACe,GAC5B,OACI,gCACI,gBAAC,IAAM,CAACpB,MAAM,qBACd,gBAACqB,EAAA,EAAS,CAACpB,UAAU,QAAQC,OAAK,GAC9B,gBAACoB,EAAA,EAAG,CAACrB,UAAU,QACVmB,EAAMG,cACH,gBAACC,EAAA,EAAG,CACApB,GACIgB,EAAMK,gBACA,EACA,CAAEC,OAAQ,EAAGC,KAAM,IAG7B,gBAAC,EAAe,CACZ3B,MAAM,gBACN4B,KAAMR,EAAMG,aACZhB,YAAaa,EAAMS,oBACnBvB,aAAcc,EAAMU,qBAI/BV,EAAMK,iBACH,gBAACD,EAAA,EAAG,CACApB,GAAIgB,EAAMG,aAAe,EAAI,CAAEG,OAAQ,EAAGC,KAAM,IAEhD,gBAAC,EAAe,CACZ3B,MAAM,gBACN4B,KAAMR,EAAMK,gBACZlB,YAAaa,EAAMW,uBACnBzB,aAAcc,EAAMY,qBACpBxB,MAAI,MAKnBY,EAAMa,iBACH,gBAACX,EAAA,EAAG,CAACrB,UAAU,QACX,gBAACuB,EAAA,EAAG,CAACpB,GAAI,CAAEsB,OAAQ,EAAGC,KAAM,IACxB,gBAAC,EAAe,CACZ3B,MAAM,cACN4B,KAAMR,EAAMa,gBACZ1B,YAAaa,EAAMc,uBACnB5B,aAAcc,EAAMe","file":"js/734.js?id=c009a90b268188242eab","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\ninterface Props {\n    headerBg?: string;\n    title?: React.ReactNode;\n}\n\nconst DefaultHeader: React.FC<Props> = ({ headerBg, title }: Props) => {\n    return (\n        <>\n            <div\n                className={`header pb-8 pt-5 pt-lg-8 d-flex align-items-center ${\n                    headerBg ?? \"bg-gradient-gray-dark\"\n                }`}\n            >\n                <Container\n                    className=\"d-flex align-items-center flex-grow-1\"\n                    fluid\n                >\n                    <Row className=\"flex-grow-1\">\n                        <Col lg=\"7\" md=\"10\">\n                            <h1 className=\"display-2 text-white\">\n                                {title ?? \" \"}\n                            </h1>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n};\n\nexport default DefaultHeader;\n","import React from \"react\";\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\nimport { Media } from \"../Wiki/MediaManager\";\nimport { InertiaLink } from \"@inertiajs/inertia-react\";\nimport route from \"ziggy-js\";\nimport classNames from \"classnames\";\n\ninterface Props {\n    title: string;\n    page: { slug: string };\n    previewImage?: Media;\n    previewText: string;\n    dark?: boolean;\n}\n\nconst PagePreviewCard: React.FC<Props> = ({\n    title,\n    page: { slug: pageSlug },\n    previewImage,\n    previewText,\n    dark = false,\n}: Props) => {\n    return (\n        <Card\n            className={classNames(\"shadow\", {\n                \"bg-gradient-dark\": dark,\n            })}\n        >\n            <CardHeader className=\"bg-transparent\">\n                <h6\n                    className={classNames({\n                        \"text-uppercase\": true,\n                        \"ls-1\": true,\n                        \"mb-1\": true,\n                        \"text-dark\": !dark,\n                        \"text-light\": dark,\n                    })}\n                >\n                    {title}\n                </h6>\n            </CardHeader>\n            <CardBody\n                className={classNames({\n                    \"text-light\": dark,\n                })}\n            >\n                {!!previewImage && (\n                    <img\n                        src={previewImage.thumbs.large}\n                        alt={previewImage.legend}\n                        className=\"rounded float-left mr-1 mb-1 shadow d-none d-md-block\"\n                    />\n                )}\n                <div\n                    className=\"text-justify\"\n                    dangerouslySetInnerHTML={{\n                        __html: previewText,\n                    }}\n                />\n                <div>\n                    <InertiaLink href={route(\"wiki.show\", pageSlug)}>\n                        See more...\n                    </InertiaLink>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default PagePreviewCard;\n","import React from \"react\";\nimport Header from \"../../Components/Layout/Headers/DefaultHeader\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport { CommonPageProps } from \"../../Types/page\";\nimport { Media } from \"../../Components/Wiki/MediaManager\";\nimport PagePreviewCard from \"../../Components/Common/PagePreviewCard\";\n\ninterface Props extends CommonPageProps {\n    featuredPage?: { slug: string };\n    featuredPageImage?: Media;\n    featuredPagePreview: string;\n    lastCreatedPage?: { slug: string };\n    lastCreatedPageImage?: Media;\n    lastCreatedPagePreview: string;\n    lastUpdatedPage?: { slug: string };\n    lastUpdatedPageImage?: Media;\n    lastUpdatedPagePreview: string;\n}\n\nconst Index: React.FC<Props> = (props: Props) => {\n    return (\n        <>\n            <Header title=\"Welcome to SciKi\" />\n            <Container className=\"mt--7\" fluid>\n                <Row className=\"mt-2\">\n                    {props.featuredPage && (\n                        <Col\n                            md={\n                                props.lastUpdatedPage\n                                    ? 6\n                                    : { offset: 3, size: 6 }\n                            }\n                        >\n                            <PagePreviewCard\n                                title=\"Featured post\"\n                                page={props.featuredPage}\n                                previewText={props.featuredPagePreview}\n                                previewImage={props.featuredPageImage}\n                            />\n                        </Col>\n                    )}\n                    {props.lastUpdatedPage && (\n                        <Col\n                            md={props.featuredPage ? 6 : { offset: 3, size: 6 }}\n                        >\n                            <PagePreviewCard\n                                title=\"Latest update\"\n                                page={props.lastUpdatedPage}\n                                previewText={props.lastUpdatedPagePreview}\n                                previewImage={props.lastUpdatedPageImage}\n                                dark\n                            />\n                        </Col>\n                    )}\n                </Row>\n                {props.lastCreatedPage && (\n                    <Row className=\"mt-2\">\n                        <Col md={{ offset: 3, size: 6 }}>\n                            <PagePreviewCard\n                                title=\"Latest page\"\n                                page={props.lastCreatedPage}\n                                previewText={props.lastCreatedPagePreview}\n                                previewImage={props.lastCreatedPageImage}\n                            />\n                        </Col>\n                    </Row>\n                )}\n            </Container>\n        </>\n    );\n};\n\nexport default Index;\n"],"sourceRoot":""}