{"version":3,"sources":["webpack:///./resources/js/Modules/Simulations/WikiPlugins/NodesTable.tsx"],"names":["SearchBar","simulation","pathway","nodes","sortable","filterable","enableId","defaultSorting","dataField","order","useState","data","undefined","state","setState","error","message","useEffect","filters","then","Object","values","e","columns","text","sort","classes","formatter","_","row","activityScore","toFixed","averagePerturbation","pValue","FDR","unshift","selectRow","mode","clickToSelect","hideSelectAll","onSelect","pagination","useMemo","alwaysShowAllBtns","showTotal","withFirstAndLast","sizePerPageRenderer","onSizePerPageChange","className","id","name","onChange","target","value","keyField","search","props","placeholder","searchProps","baseProps","bootstrap4","filter","bordered","defaultSorted","color"],"mappings":"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","file":"js/124.js?id=bf9cf038f8ce41f8b9c0","sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport BootstrapTable, {\n    ColumnDescription,\n    SelectRowProps,\n    SizePerPageRendererOptions,\n    SortOrder,\n} from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory from \"react-bootstrap-table2-filter\";\nimport ToolkitProvider, {\n    Search,\n    ToolkitContextType,\n} from \"react-bootstrap-table2-toolkit\";\nimport axios from \"axios\";\nimport route from \"ziggy-js\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\nimport { Alert } from \"reactstrap\";\n\ninterface Props {\n    simulation: number;\n    pathway?: string;\n    nodes?: string[];\n    sortable?: boolean;\n    filterable?: boolean;\n    enableId?: boolean;\n    defaultSorting?: { dataField: keyof Node; order: SortOrder };\n    onSelect?: (node: string) => void;\n}\n\nexport interface Node {\n    nodeId: string;\n    nodeName: string;\n    averagePerturbation: number;\n    activityScore: number;\n    pValue: number;\n    FDR: number;\n}\n\ninterface State {\n    data?: Node[];\n    error?: boolean;\n    message?: string;\n}\n\nconst { SearchBar } = Search;\n\nconst NodesTable: React.FC<Props> = ({\n    simulation,\n    pathway,\n    nodes,\n    sortable = true,\n    filterable = true,\n    enableId = false,\n    defaultSorting = {\n        dataField: \"FDR\",\n        order: \"asc\",\n    },\n    onSelect,\n}: Props) => {\n    const [state, setState] = useState<State>({\n        data: undefined,\n    });\n\n    const { data, error, message } = state;\n\n    useEffect(() => {\n        if (pathway) {\n            const filters = nodes ? { nodes } : {};\n            axios\n                .post<Record<string, Node>>(\n                    route(\"simulations.plugins.nodesTable\", simulation),\n                    { pathway, ...filters }\n                )\n                .then(({ data }) => {\n                    setState({\n                        data: Object.values(data),\n                    });\n                })\n                .catch((e) => {\n                    setState({\n                        error: true,\n                        message: e.message,\n                    });\n                });\n        }\n    }, [simulation, nodes, pathway]);\n\n    const columns: ColumnDescription[] = [\n        {\n            dataField: \"nodeName\",\n            text: \"Name\",\n            sort: sortable,\n            classes: \"text-truncate\",\n        },\n        {\n            dataField: \"activityScore\",\n            text: \"Activity Score\",\n            sort: sortable,\n            classes: \"text-truncate\",\n            formatter: (_, row) => row.activityScore.toFixed(4),\n        },\n        {\n            dataField: \"averagePerturbation\",\n            text: \"Perturbation\",\n            sort: sortable,\n            classes: \"text-truncate\",\n            formatter: (_, row) => row.averagePerturbation.toFixed(4),\n        },\n        {\n            dataField: \"pValue\",\n            text: \"p-value\",\n            sort: sortable,\n            classes: \"text-truncate\",\n            formatter: (_, row) =>\n                row.pValue < 0.0001 ? \"< 0.0001\" : row.pValue.toFixed(4),\n        },\n        {\n            dataField: \"FDR\",\n            text: \"FDR\",\n            sort: sortable,\n            classes: \"text-truncate\",\n            formatter: (_, row) =>\n                row.FDR < 0.0001 ? \"< 0.0001\" : row.FDR.toFixed(4),\n        },\n    ];\n    if (enableId) {\n        columns.unshift({\n            dataField: \"nodeId\",\n            text: \"Id\",\n            sort: sortable,\n        });\n    }\n    const selectRow: SelectRowProps<Node> | undefined = onSelect\n        ? {\n              mode: \"checkbox\",\n              clickToSelect: true,\n              hideSelectAll: true,\n              onSelect: (row) => onSelect(row.nodeId),\n          }\n        : undefined;\n\n    const pagination = useMemo(\n        () =>\n            paginationFactory({\n                alwaysShowAllBtns: true,\n                showTotal: true,\n                withFirstAndLast: false,\n                sizePerPageRenderer: ({\n                    onSizePerPageChange,\n                }: SizePerPageRendererOptions) => (\n                    <div\n                        className=\"dataTables_length\"\n                        id=\"datatable-basic_length\"\n                    >\n                        <label>\n                            Show{\" \"}\n                            {\n                                <select\n                                    name=\"datatable-basic_length\"\n                                    aria-controls=\"datatable-basic\"\n                                    className=\"form-control form-control-sm\"\n                                    onChange={(e) =>\n                                        onSizePerPageChange(+e.target.value, 1)\n                                    }\n                                >\n                                    <option value=\"10\">10</option>\n                                    <option value=\"25\">25</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                </select>\n                            }{\" \"}\n                            entries.\n                        </label>\n                    </div>\n                ),\n            }),\n        [simulation, pathway, nodes, sortable]\n    );\n\n    if (!pathway) {\n        return (\n            <Alert color=\"warning\">Select a pathway to view its nodes.</Alert>\n        );\n    }\n\n    if (error) {\n        return <p className=\"text-red\">{message}</p>;\n    }\n\n    return (\n        <ToolkitProvider\n            keyField=\"nodeId\"\n            data={data ?? []}\n            columns={columns}\n            search\n        >\n            {(props: ToolkitContextType) => (\n                <div className=\"py-4\">\n                    {filterable && (\n                        <div className=\"dataTables_filter px-4 pb-1\">\n                            <label>\n                                Search:\n                                <SearchBar\n                                    className=\"form-control-sm\"\n                                    placeholder=\"\"\n                                    {...props.searchProps}\n                                />\n                            </label>\n                        </div>\n                    )}\n                    <BootstrapTable\n                        {...props.baseProps}\n                        bootstrap4\n                        pagination={pagination}\n                        filter={filterFactory()}\n                        bordered={false}\n                        defaultSorted={[defaultSorting]}\n                        selectRow={selectRow}\n                    />\n                </div>\n            )}\n        </ToolkitProvider>\n    );\n};\n\nexport default NodesTable;\n"],"sourceRoot":""}