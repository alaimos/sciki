{"version":3,"sources":["webpack:///./resources/js/Components/Common/Vote.tsx","webpack:///./resources/js/Components/Layout/Headers/DefaultHeader.tsx","webpack:///./resources/js/Components/Wiki/WikiPageHeader.tsx","webpack:///./resources/js/Components/Common/Comments/PostCommentForm.tsx","webpack:///./resources/js/Components/Common/Comments/CommentCard.tsx","webpack:///./resources/js/Pages/Wiki/PageComments.tsx"],"names":["object","idKey","commentRoute","useState","currentUserVote","current_user_vote","totalVote","votes_sum_vote","state","setState","doVote","vote","voting","prevState","response","data","total_votes","className","like","cursor","selected","onClick","title","headerBg","fluid","lg","md","userIsLoggedIn","pageSlug","children","customNavButtons","userCanUpdate","userCanDelete","userCanUpdateOrDelete","pills","e","preventDefault","confirm","Inertia","href","currentUserAvatar","currentUserEmail","comment","setData","post","processing","reset","Card","CardBody","src","alt","width","Input","type","value","onChange","target","disabled","preserveState","onDeleteComment","isDeleted","setIsDeleted","user","avatar","small","name","height","readable_created_at","can_delete","axios","id","status","Vote","auth","comments","can","deletedComments","setDeletedComments","userAvatarSmall","undefined","WikiPageHeader","NavItem","key","NavLink","tag","filter","c","includes","map","slug","email"],"mappings":"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","file":"js/845.js?id=b9251873bd8a0d139768","sourcesContent":["import React, { useState } from \"react\";\nimport route from \"ziggy-js\";\nimport axios from \"../../Common/axios\";\nimport classNames from \"classnames\";\n\nexport interface Voteable {\n    current_user_vote: number | null;\n    votes_sum_vote: number;\n}\n\ninterface CommentVoteResponse {\n    current_user_vote: number;\n    total_votes: number;\n}\n\ninterface Props<T extends Voteable = Voteable> {\n    object: T;\n    idKey: string;\n    commentRoute: string;\n}\n\ninterface State {\n    voting?: boolean;\n    currentUserVote: number;\n    totalVote: number;\n}\n\nconst Vote: React.FC<Props> = ({ object, idKey, commentRoute }: Props) => {\n    const [state, setState] = useState<State>({\n        currentUserVote: object.current_user_vote ?? 0,\n        totalVote: object.votes_sum_vote,\n    });\n    const doVote = async (vote: number) => {\n        if (state.voting) return;\n        setState((prevState) => ({ ...prevState, voting: true }));\n        const response = await axios.post<CommentVoteResponse>(\n            // @ts-ignore\n            route(commentRoute, object[idKey]),\n            {\n                vote,\n            }\n        );\n        setState({\n            currentUserVote: response.data.current_user_vote,\n            totalVote: response.data.total_votes ?? 0,\n        });\n    };\n\n    return (\n        <div className=\"vote\">\n            <div className=\"d-flex flex-row text-sm\">\n                <div\n                    className={classNames({\n                        like: true,\n                        \"p-2\": true,\n                        cursor: true,\n                        selected: state.currentUserVote === 1,\n                    })}\n                    onClick={() => doVote(+1)}\n                >\n                    <i className=\"fas fa-thumbs-up\" />\n                    <span className=\"ml-1\">Up-vote</span>\n                </div>\n                <div className=\"p-2\" title=\"Votes\">\n                    <i className=\"fas fa-vote-yea\" />\n                    <span className=\"ml-1\">{state.totalVote}</span>\n                </div>\n                <div\n                    className={classNames({\n                        like: true,\n                        \"p-2\": true,\n                        cursor: true,\n                        selected: state.currentUserVote === -1,\n                    })}\n                    onClick={() => doVote(-1)}\n                >\n                    <i className=\"fas fa-thumbs-down\" />\n                    <span className=\"ml-1\">Down-vote</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Vote;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\ninterface Props {\n    headerBg?: string;\n    title?: React.ReactNode;\n}\n\nconst DefaultHeader: React.FC<Props> = ({ headerBg, title }: Props) => {\n    return (\n        <>\n            <div\n                className={`header pb-8 pt-5 pt-lg-8 d-flex align-items-center ${\n                    headerBg ?? \"bg-gradient-gray-dark\"\n                }`}\n            >\n                <Container\n                    className=\"d-flex align-items-center flex-grow-1\"\n                    fluid\n                >\n                    <Row className=\"flex-grow-1\">\n                        <Col lg=\"7\" md=\"10\">\n                            <h1 className=\"display-2 text-white\">\n                                {title ?? \" \"}\n                            </h1>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n};\n\nexport default DefaultHeader;\n","import React, { ReactNode } from \"react\";\nimport Header from \"../../Components/Layout/Headers/DefaultHeader\";\nimport { Col, Container, Nav, NavItem, NavLink, Row } from \"reactstrap\";\nimport { Helmet } from \"react-helmet\";\nimport { Inertia } from \"@inertiajs/inertia\";\nimport route from \"ziggy-js\";\n\ninterface Props {\n    userIsLoggedIn: boolean;\n    pageSlug: string;\n    title: string;\n    customNavButtons?: ReactNode[];\n    children?: ReactNode;\n    userCanUpdate: boolean;\n    userCanDelete: boolean;\n}\n\nconst WikiPageHeader: React.FC<Props> = ({\n    userIsLoggedIn,\n    pageSlug,\n    title,\n    children,\n    customNavButtons,\n    userCanUpdate,\n    userCanDelete,\n}: Props) => {\n    const userCanUpdateOrDelete = userCanUpdate || userCanDelete;\n    const handleDelete = (e: React.MouseEvent<HTMLAnchorElement>) => {\n        e.preventDefault();\n        if (confirm(\"Do you really want to delete this page?\")) {\n            return Inertia.delete(route(\"page.destroy\", pageSlug));\n        }\n        return;\n    };\n    const handleEdit = (e: React.MouseEvent<HTMLAnchorElement>) => {\n        e.preventDefault();\n        return Inertia.get(route(\"page.edit\", pageSlug));\n    };\n    return (\n        <>\n            <Helmet>\n                <title>{title}</title>\n            </Helmet>\n            <Header title={title} />\n            <Container className=\"mt--7\" fluid>\n                <Row className=\"mb-2\">\n                    <Col lg={12} className=\"text-right\">\n                        <Nav\n                            className=\"nav-fill flex-column-reverse flex-sm-row-reverse\"\n                            pills\n                        >\n                            {userIsLoggedIn && userCanUpdateOrDelete && (\n                                <>\n                                    {userCanDelete && (\n                                        <NavItem className=\"ml-2 flex-grow-0\">\n                                            <NavLink\n                                                className=\"mb-sm-3 mb-md-0 text-danger\"\n                                                onClick={handleDelete}\n                                                href=\"#\"\n                                            >\n                                                <i className=\"fas fa-trash mr-2\" />\n                                                Delete\n                                            </NavLink>\n                                        </NavItem>\n                                    )}\n                                    {userCanUpdate && (\n                                        <NavItem className=\"ml-2 flex-grow-0\">\n                                            <NavLink\n                                                className=\"mb-sm-3 mb-md-0\"\n                                                onClick={handleEdit}\n                                                href=\"#\"\n                                            >\n                                                <i className=\"fas fa-pencil-alt mr-2\" />\n                                                Edit\n                                            </NavLink>\n                                        </NavItem>\n                                    )}\n                                </>\n                            )}\n                            {customNavButtons}\n                        </Nav>\n                    </Col>\n                </Row>\n                {children}\n            </Container>\n        </>\n    );\n};\n\nexport default WikiPageHeader;\n","import React from \"react\";\nimport { Card, CardBody, Input } from \"reactstrap\";\nimport { useForm } from \"@inertiajs/inertia-react\";\nimport route from \"ziggy-js\";\n\ninterface Props {\n    slug: string;\n    userIsLoggedIn: boolean;\n    currentUserAvatar?: string;\n    currentUserEmail?: string;\n}\n\nconst PostCommentForm: React.FC<Props> = ({\n    slug: pageSlug,\n    userIsLoggedIn,\n    currentUserAvatar,\n    currentUserEmail,\n}: Props) => {\n    const { data, setData, post, processing, reset } = useForm({\n        comment: \"\",\n    });\n\n    return (\n        <>\n            {userIsLoggedIn && (\n                <Card className=\"p-0 mt-2\">\n                    <CardBody className=\"p-0 bg-light d-flex flex-column\">\n                        <div className=\"p-2\">\n                            <div className=\"d-flex flex-row align-items-start\">\n                                <img\n                                    className=\"rounded-circle\"\n                                    src={currentUserAvatar}\n                                    alt={currentUserEmail}\n                                    width=\"40\"\n                                />\n                                <Input\n                                    type=\"textarea\"\n                                    className=\"ml-1 shadow-none textarea\"\n                                    value={data.comment}\n                                    onChange={(e) =>\n                                        setData(\"comment\", e.target.value)\n                                    }\n                                />\n                            </div>\n                            <div className=\"mt-2 text-right\">\n                                <button\n                                    className=\"btn btn-primary btn-sm shadow-none\"\n                                    type=\"button\"\n                                    disabled={processing}\n                                    onClick={() =>\n                                        post(\n                                            route(\n                                                \"wiki.comments.store\",\n                                                pageSlug\n                                            ),\n                                            {\n                                                preserveState: false,\n                                            }\n                                        )\n                                    }\n                                >\n                                    Post comment\n                                </button>\n                                <button\n                                    className=\"btn btn-outline-primary btn-sm ml-1 shadow-none\"\n                                    type=\"button\"\n                                    disabled={processing}\n                                    onClick={() => reset()}\n                                >\n                                    Cancel\n                                </button>\n                            </div>\n                        </div>\n                    </CardBody>\n                </Card>\n            )}\n        </>\n    );\n};\n\nexport default PostCommentForm;\n","import React, { useState } from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport route from \"ziggy-js\";\nimport { AuthUser } from \"../../../Types/page\";\nimport axios from \"../../../Common/axios\";\nimport Vote from \"../Vote\";\n\nexport interface Comment {\n    id: number;\n    comment: string;\n    created_at: string;\n    readable_created_at: string;\n    user: AuthUser;\n    current_user_vote: number | null;\n    votes_sum_vote: number;\n    can_delete: boolean;\n}\n\ninterface Props {\n    userIsLoggedIn: boolean;\n    comment: Comment;\n    onDeleteComment?: (id: number) => void;\n}\nconst CommentCard: React.FC<Props> = ({\n    comment,\n    userIsLoggedIn,\n    onDeleteComment,\n}: Props) => {\n    const [isDeleted, setIsDeleted] = useState(false);\n\n    const doDelete = async () => {\n        if (comment.can_delete) {\n            const response = await axios.delete(\n                route(\"comments.destroy\", comment.id)\n            );\n            if (response.status === 200 && onDeleteComment) {\n                setIsDeleted(true);\n                onDeleteComment(comment.id);\n            }\n        }\n    };\n\n    return (\n        <>\n            <Card className=\"p-0 comment\">\n                <CardBody className=\"p-0 d-flex flex-column bg-white\">\n                    <div className=\"p-2\">\n                        <div className=\"d-flex flex-row user-info align-items-center\">\n                            <img\n                                className=\"rounded-circle\"\n                                src={comment.user.avatar.small}\n                                alt={comment.user.name}\n                                width=\"40\"\n                                height=\"40\"\n                            />\n                            <div className=\"d-flex flex-column justify-content-start ml-2 flex-grow-1\">\n                                <span className=\"d-block font-weight-bold text-primary\">\n                                    {comment.user.name}\n                                </span>\n                                <span className=\"date text-gray-dark text-sm\">\n                                    {comment.readable_created_at}\n                                </span>\n                            </div>\n                            {comment.can_delete && !isDeleted && (\n                                <div className=\"m-2\">\n                                    <a\n                                        href=\"#\"\n                                        className=\"text-red\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            return doDelete();\n                                        }}\n                                    >\n                                        <i className=\"fas fa-trash\" />\n                                    </a>\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"mt-2 text-dark\">\n                            <p className=\"comment-text\">{comment.comment}</p>\n                        </div>\n                    </div>\n                    {userIsLoggedIn && (\n                        <Vote\n                            object={comment}\n                            idKey=\"id\"\n                            commentRoute=\"comments.vote\"\n                        />\n                    )}\n                </CardBody>\n            </Card>\n        </>\n    );\n};\n\nexport default CommentCard;\n","import React, { useState } from \"react\";\nimport { NavItem, NavLink } from \"reactstrap\";\nimport { CommonPageProps } from \"../../Types/page\";\nimport route from \"ziggy-js\";\nimport { InertiaLink } from \"@inertiajs/inertia-react\";\nimport WikiPageHeader from \"../../Components/Wiki/WikiPageHeader\";\nimport PostCommentForm from \"../../Components/Common/Comments/PostCommentForm\";\nimport CommentCard, {\n    Comment,\n} from \"../../Components/Common/Comments/CommentCard\";\n\ninterface Props extends CommonPageProps {\n    slug: string;\n    title: string;\n    draft: boolean;\n    comments: {\n        data: Comment[];\n    };\n    can: {\n        create: boolean;\n        update: boolean;\n        delete: boolean;\n    };\n}\n\nconst Page: React.FC<Props> = ({\n    auth: { check: userIsLoggedIn, user: user },\n    comments: { data: comments },\n    slug: pageSlug,\n    title,\n    can: { update: userCanUpdate, delete: userCanDelete },\n}: Props) => {\n    const [deletedComments, setDeletedComments] = useState<number[]>([]);\n    const userAvatarSmall = user ? user.avatar.small : undefined;\n    return (\n        <WikiPageHeader\n            userIsLoggedIn={userIsLoggedIn}\n            pageSlug={pageSlug}\n            title={`Comments of ${title}`}\n            userCanUpdate={userCanUpdate}\n            userCanDelete={userCanDelete}\n            customNavButtons={[\n                <NavItem className=\"ml-2 flex-grow-0\" key=\"wiki.show\">\n                    <NavLink\n                        className=\"mb-sm-3 mb-md-0\"\n                        tag={InertiaLink}\n                        href={route(\"wiki.show\", pageSlug)}\n                    >\n                        <i className=\"fas fa-eye mr-2\" />\n                        View page\n                    </NavLink>\n                </NavItem>,\n            ]}\n        >\n            <div className=\"d-flex justify-content-center row\">\n                <div className=\"col-md-12\">\n                    {comments\n                        .filter((c) => !deletedComments.includes(c.id))\n                        .map((c) => (\n                            <CommentCard\n                                userIsLoggedIn={userIsLoggedIn}\n                                comment={c}\n                                key={c.id}\n                                onDeleteComment={(id) =>\n                                    setDeletedComments((prevState) => [\n                                        ...prevState,\n                                        id,\n                                    ])\n                                }\n                            />\n                        ))}\n                    <PostCommentForm\n                        slug={pageSlug}\n                        userIsLoggedIn={userIsLoggedIn}\n                        currentUserAvatar={userAvatarSmall}\n                        currentUserEmail={user?.email}\n                    />\n                </div>\n            </div>\n        </WikiPageHeader>\n    );\n};\n\nexport default Page;\n"],"sourceRoot":""}