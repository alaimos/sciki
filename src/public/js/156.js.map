{"version":3,"sources":["webpack:///./resources/js/Components/Layout/Headers/DefaultHeader.tsx","webpack:///./resources/js/Pages/Pages/Index.tsx"],"names":["headerBg","title","className","fluid","lg","md","userIsAdmin","useState","data","undefined","sizePerPage","page","totalSize","state","setState","useEffect","sortField","sortOrder","then","value","prevState","e","console","error","pagination","useMemo","alwaysShowAllBtns","showTotal","withFirstAndLast","sizePerPageRenderer","onSizePerPageChange","id","name","onChange","target","columns","dataField","text","sort","filter","formatter","_","row","user","isDummyField","headerStyle","width","href","slug","placement","as","method","preserveState","pills","onClick","preventDefault","alert","keyField","remote","bootstrap4","bordered","defaultSorted","order","onTableChange","newState","filters","overlay","spinner"],"mappings":"qJAiCA,QAzBuC,SAAC,G,IAAEA,EAAQ,WAAEC,EAAK,QACrD,OACI,gCACI,uBACIC,UAAW,uDACPF,UAAY,0BAGhB,gBAAC,IAAS,CACNE,UAAU,wCACVC,OAAK,GAEL,gBAAC,IAAG,CAACD,UAAU,eACX,gBAAC,IAAG,CAACE,GAAG,IAAIC,GAAG,MACX,sBAAIH,UAAU,wBACTD,UAAS,Y,+fC6P1C,QArOyC,SAAC,G,IACpBK,EAAW,gBAEvB,GAAoB,IAAAC,UAAgB,CACtCC,UAAMC,EACNC,YAAa,GACbC,KAAM,EACNC,UAAW,IAJRC,EAAK,KAAEC,EAAQ,KAOdN,EAAuCK,EAAnC,KAAEH,EAAiCG,EAAtB,YAAEF,EAAoBE,EAAhB,KAAED,EAAcC,EAAL,WAE1C,IAAAE,YAAU,gBACON,IAATD,GACA,SACiB,IAAM,oBAAqB,CACpCQ,UAAW,aACXC,UAAW,SAEdC,MAAK,SAACC,GACHL,GAAS,SAACM,GAAc,cACjBA,GACAD,EAFiB,YANhC,OAWW,SAACE,GACJC,QAAQC,MAAMF,QAG3B,IAEH,IAAMG,GAAa,IAAAC,UACf,WACI,eAAkB,CACdd,KAAI,EACJC,UAAS,EACTF,YAAW,EACXgB,mBAAmB,EACnBC,WAAW,EACXC,kBAAkB,EAClBC,oBAAqB,SAAC,G,IAClBC,EAAmB,sBACW,OAC9B,uBACI5B,UAAU,oBACV6B,GAAG,0BAEH,6B,OACS,IAED,0BACIC,KAAK,yBAAwB,gBACf,kBACd9B,UAAU,+BACV+B,SAAU,SAACZ,GACP,OAAAS,GAAqBT,EAAEa,OAAOf,MAAO,KAGzC,0BAAQA,MAAM,MAAI,MAClB,0BAAQA,MAAM,MAAI,MAClB,0BAAQA,MAAM,MAAI,MAClB,0BAAQA,MAAM,OAAK,QAEzB,IAEE,kBAIxB,CAACR,EAAMC,EAAWF,IAGhByB,EAA+B,CACjC,CACIC,UAAW,QACXC,KAAM,QACNC,MAAM,EACNC,QAAQ,QAAW,CACfrC,UAAW,qBAGnB,CACIkC,UAAW,UACXC,KAAM,aACNC,MAAM,EACNE,UAAW,SAACC,EAAGC,GAAQ,OAAAA,EAAIC,KAAJ,OAE3B,CACIP,UAAW,aACXC,KAAM,aACNC,MAAM,EACNE,UAAW,SAACC,EAAGC,GAAQ,OAAAA,EAAA,sBAE3B,CACIN,UAAW,UACXQ,cAAc,EACdP,KAAM,GACNC,MAAM,EACNO,YAAa,CACTC,MAAO,SAEXN,UAAW,SAACC,EAAGC,GACX,OACI,gCACI,gBAAC,KAAW,CACRX,GAAI,aAAaW,EAAIX,GACrBgB,KAAM,IAAM,YAAaL,EAAIM,MAC7B9C,UAAU,uBAEV,qBAAGA,UAAU,gBAEjB,gBAAC,IAAmB,CAChB+C,UAAU,OACVf,OAAQ,aAAaQ,EAAIX,IAAI,QAIjC,gBAAC,KAAW,CACRA,GAAI,aAAaW,EAAIX,GACrBgB,KAAM,IAAM,YAAaL,EAAIM,MAC7B9C,UAAU,uBAEV,qBAAGA,UAAU,uBAEjB,gBAAC,IAAmB,CAChB+C,UAAU,OACVf,OAAQ,aAAaQ,EAAIX,IAAI,QAIjC,gBAAC,KAAW,CACRA,GAAI,eAAeW,EAAIX,GACvBmB,GAAG,SACHC,OAAO,SACPJ,KAAM,IAAM,eAAgBL,EAAIM,MAChC9C,UAAU,sBACVkD,eAAe,GAEf,qBAAGlD,UAAU,8BAEjB,gBAAC,IAAmB,CAChB+C,UAAU,OACVf,OAAQ,eAAeQ,EAAIX,IAAI,cAUvD,OACI,gCACI,gBAAC,IAAM,CAAC9B,MAAOK,EAAc,QAAU,aACvC,gBAAC,IAAS,CAACJ,UAAU,QAAQC,OAAK,GAC9B,gBAAC,IAAG,CAACD,UAAU,QACX,gBAAC,IAAG,CAACE,GAAI,GAAIF,UAAU,cACnB,gBAAC,IAAG,CACAA,UAAU,mDACVmD,OAAK,GAEL,gBAAC,IAAO,CAACnD,UAAU,eACf,gBAAC,IAAO,CACJA,UAAU,kBACV6C,KAAK,IACLO,QAAS,SAACjC,GACNA,EAAEkC,iBACFC,MAAM,UAGV,qBAAGtD,UAAU,4BAEP,gBAK1B,gBAAC,IAAI,CAACA,UAAU,UACZ,gBAAC,IAAQ,KACL,uBAAKA,UAAU,QACX,gBAAC,IAAc,CACXuD,SAAS,KACTjD,KAAMA,UAAQ,GACd2B,QAASA,EACTuB,QAAM,EACNC,YAAU,EACVnC,WAAYA,EACZe,QAAQ,UACRqB,UAAU,EACVC,cAAe,CACX,CACIzB,UAAW,aACX0B,MAAO,SAGfC,cAAe,SAACtB,EAAGuB,GACf,SAEQ,IAAM,oBACN,CACIrD,KAAMqD,EAASrD,KACfD,YACIsD,EAAStD,YACbM,UAAWgD,EAAShD,UACpBC,UAAW+C,EAAS/C,UACpBgD,QAASD,EAASC,UAGzB/C,MAAK,SAACC,GACHL,GAAS,SAACM,GAAc,cACjBA,GACAD,EAFiB,YAbhC,OAkBW,SAACE,GACJC,QAAQC,MAAMF,OAG1B6C,SAAS,OAAe,CAAEC,SAAS","file":"js/156.js?id=65d8f2a5c6a107d57514","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\ninterface Props {\n    headerBg?: string;\n    title?: React.ReactNode;\n}\n\nconst DefaultHeader: React.FC<Props> = ({ headerBg, title }: Props) => {\n    return (\n        <>\n            <div\n                className={`header pb-8 pt-5 pt-lg-8 d-flex align-items-center ${\n                    headerBg ?? \"bg-gradient-gray-dark\"\n                }`}\n            >\n                <Container\n                    className=\"d-flex align-items-center flex-grow-1\"\n                    fluid\n                >\n                    <Row className=\"flex-grow-1\">\n                        <Col lg=\"7\" md=\"10\">\n                            <h1 className=\"display-2 text-white\">\n                                {title ?? \" \"}\n                            </h1>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n};\n\nexport default DefaultHeader;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport Header from \"../../Components/Layout/Headers/DefaultHeader\";\nimport {\n    Card,\n    CardBody,\n    Col,\n    Container,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n    UncontrolledTooltip,\n} from \"reactstrap\";\nimport type { CommonPageProps } from \"../../Types/page\";\nimport BootstrapTable, {\n    ColumnDescription,\n    SizePerPageRendererOptions,\n} from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\nimport axios from \"axios\";\n// @ts-ignore\nimport overlayFactory from \"react-bootstrap-table2-overlay\";\nimport route from \"ziggy-js\";\nimport { InertiaLink } from \"@inertiajs/inertia-react\";\n\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\n\ninterface Page {\n    id: string;\n    title: string;\n    slug: string;\n    user_id: string;\n    created_at: string;\n    readable_created_at: string;\n}\n\ninterface State {\n    data?: Page[];\n    sizePerPage: number;\n    page: number;\n    totalSize: number;\n}\n\nconst Index: React.FC<CommonPageProps> = ({\n    auth: { is_admin: userIsAdmin },\n}: CommonPageProps) => {\n    const [state, setState] = useState<State>({\n        data: undefined,\n        sizePerPage: 10,\n        page: 1,\n        totalSize: 0,\n    });\n\n    const { data, sizePerPage, page, totalSize } = state;\n\n    useEffect(() => {\n        if (data === undefined) {\n            axios\n                .post<State>(route(\"page.index.table\"), {\n                    sortField: \"created_at\",\n                    sortOrder: \"desc\",\n                })\n                .then((value) => {\n                    setState((prevState) => ({\n                        ...prevState,\n                        ...value.data,\n                    }));\n                })\n                .catch((e) => {\n                    console.error(e);\n                });\n        }\n    }, []);\n\n    const pagination = useMemo(\n        () =>\n            paginationFactory({\n                page,\n                totalSize,\n                sizePerPage,\n                alwaysShowAllBtns: true,\n                showTotal: true,\n                withFirstAndLast: false,\n                sizePerPageRenderer: ({\n                    onSizePerPageChange,\n                }: SizePerPageRendererOptions) => (\n                    <div\n                        className=\"dataTables_length\"\n                        id=\"datatable-basic_length\"\n                    >\n                        <label>\n                            Show{\" \"}\n                            {\n                                <select\n                                    name=\"datatable-basic_length\"\n                                    aria-controls=\"datatable-basic\"\n                                    className=\"form-control form-control-sm\"\n                                    onChange={(e) =>\n                                        onSizePerPageChange(+e.target.value, 1)\n                                    }\n                                >\n                                    <option value=\"10\">10</option>\n                                    <option value=\"25\">25</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                </select>\n                            }{\" \"}\n                            entries.\n                        </label>\n                    </div>\n                ),\n            }),\n        [page, totalSize, sizePerPage]\n    );\n\n    const columns: ColumnDescription[] = [\n        {\n            dataField: \"title\",\n            text: \"Title\",\n            sort: true,\n            filter: textFilter({\n                className: \"form-control-sm\",\n            }),\n        },\n        {\n            dataField: \"user_id\",\n            text: \"Created by\",\n            sort: true,\n            formatter: (_, row) => row.user.name,\n        },\n        {\n            dataField: \"created_at\",\n            text: \"Created at\",\n            sort: true,\n            formatter: (_, row) => row.readable_created_at,\n        },\n        {\n            dataField: \"actions\",\n            isDummyField: true,\n            text: \"\",\n            sort: false,\n            headerStyle: {\n                width: \"160px\",\n            },\n            formatter: (_, row) => {\n                return (\n                    <>\n                        <InertiaLink\n                            id={`view-link-${row.id}`}\n                            href={route(\"wiki.show\", row.slug)}\n                            className=\"btn btn-sm btn-link\"\n                        >\n                            <i className=\"fas fa-eye\" />\n                        </InertiaLink>\n                        <UncontrolledTooltip\n                            placement=\"auto\"\n                            target={`view-link-${row.id}`}\n                        >\n                            View\n                        </UncontrolledTooltip>\n                        <InertiaLink\n                            id={`edit-link-${row.id}`}\n                            href={route(\"page.edit\", row.slug)}\n                            className=\"btn btn-sm btn-link\"\n                        >\n                            <i className=\"fas fa-pencil-alt\" />\n                        </InertiaLink>\n                        <UncontrolledTooltip\n                            placement=\"auto\"\n                            target={`edit-link-${row.id}`}\n                        >\n                            Edit\n                        </UncontrolledTooltip>\n                        <InertiaLink\n                            id={`delete-link-${row.id}`}\n                            as=\"button\"\n                            method=\"delete\"\n                            href={route(\"page.destroy\", row.slug)}\n                            className=\"btn btn-sm btn-link\"\n                            preserveState={false}\n                        >\n                            <i className=\"fas fa-trash text-danger\" />\n                        </InertiaLink>\n                        <UncontrolledTooltip\n                            placement=\"auto\"\n                            target={`delete-link-${row.id}`}\n                        >\n                            Delete\n                        </UncontrolledTooltip>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Header title={userIsAdmin ? \"Pages\" : \"My Pages\"} />\n            <Container className=\"mt--7\" fluid>\n                <Row className=\"mb-2\">\n                    <Col lg={12} className=\"text-right\">\n                        <Nav\n                            className=\"nav-fill flex-column-reverse flex-sm-row-reverse\"\n                            pills\n                        >\n                            <NavItem className=\"flex-grow-0\">\n                                <NavLink\n                                    className=\"mb-sm-3 mb-md-0\"\n                                    href=\"#\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        alert(\"TODO\");\n                                    }}\n                                >\n                                    <i className=\"fas fa-plus-square mr-2\" />\n                                    New page\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Col>\n                </Row>\n                <Card className=\"shadow\">\n                    <CardBody>\n                        <div className=\"py-4\">\n                            <BootstrapTable\n                                keyField=\"id\"\n                                data={data ?? []}\n                                columns={columns}\n                                remote\n                                bootstrap4\n                                pagination={pagination}\n                                filter={filterFactory()}\n                                bordered={false}\n                                defaultSorted={[\n                                    {\n                                        dataField: \"created_at\",\n                                        order: \"desc\",\n                                    },\n                                ]}\n                                onTableChange={(_, newState) => {\n                                    axios\n                                        .post<State>(\n                                            route(\"page.index.table\"),\n                                            {\n                                                page: newState.page,\n                                                sizePerPage:\n                                                    newState.sizePerPage,\n                                                sortField: newState.sortField,\n                                                sortOrder: newState.sortOrder,\n                                                filters: newState.filters,\n                                            }\n                                        )\n                                        .then((value) => {\n                                            setState((prevState) => ({\n                                                ...prevState,\n                                                ...value.data,\n                                            }));\n                                        })\n                                        .catch((e) => {\n                                            console.error(e);\n                                        });\n                                }}\n                                overlay={overlayFactory({ spinner: true })}\n                            />\n                        </div>\n                    </CardBody>\n                </Card>\n            </Container>\n        </>\n    );\n};\n\nexport default Index;\n"],"sourceRoot":""}