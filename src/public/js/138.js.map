{"version":3,"sources":["webpack:///./resources/js/Components/Layout/Headers/DefaultHeader.tsx","webpack:///./resources/js/Pages/Admin/Users/Create.tsx"],"names":["headerBg","title","className","fluid","lg","md","roles","name","email","password","password_confirmation","data","setData","errors","post","processing","submitForm","e","preventDefault","onSubmit","pills","onClick","disabled","href","for","id","placeholder","type","value","invalid","onChange","target","tag","style","display","autoComplete","role_id","Object","entries","map","key"],"mappings":"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","file":"js/138.js?id=71db9f1850ec579fc45c","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\ninterface Props {\n    headerBg?: string;\n    title?: React.ReactNode;\n}\n\nconst DefaultHeader: React.FC<Props> = ({ headerBg, title }: Props) => {\n    return (\n        <>\n            <div\n                className={`header pb-8 pt-5 pt-lg-8 d-flex align-items-center ${\n                    headerBg ?? \"bg-gradient-gray-dark\"\n                }`}\n            >\n                <Container\n                    className=\"d-flex align-items-center flex-grow-1\"\n                    fluid\n                >\n                    <Row className=\"flex-grow-1\">\n                        <Col lg=\"7\" md=\"10\">\n                            <h1 className=\"display-2 text-white\">\n                                {title ?? \" \"}\n                            </h1>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n};\n\nexport default DefaultHeader;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from \"react\";\nimport Header from \"../../../Components/Layout/Headers/DefaultHeader\";\nimport {\n    Card,\n    CardBody,\n    Col,\n    Container,\n    Form,\n    FormFeedback,\n    FormGroup,\n    Input,\n    Label,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n} from \"reactstrap\";\nimport type { CommonPageProps } from \"../../../Types/page\";\nimport route from \"ziggy-js\";\nimport { useForm } from \"@inertiajs/inertia-react\";\nimport classNames from \"classnames\";\n\ninterface Props extends CommonPageProps {\n    roles: Record<number, string>;\n}\n\ninterface FormType {\n    name: string;\n    email: string;\n    password: string;\n    password_confirmation: string;\n    role_id?: number;\n}\n\nconst Index: React.FC<Props> = ({ roles }: Props) => {\n    const { data, setData, errors, post, processing } = useForm<FormType>({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password_confirmation: \"\",\n    });\n\n    const submitForm = async (\n        e:\n            | React.MouseEvent<HTMLAnchorElement>\n            | React.FormEvent<HTMLFormElement>\n    ) => {\n        e.preventDefault();\n        await post(route(\"admin.users.store\"));\n    };\n\n    return (\n        <Form onSubmit={submitForm}>\n            <Header title=\"New user\" />\n            <Container className=\"mt--7\" fluid>\n                <Row className=\"mb-2\">\n                    <Col lg={12} className=\"text-right\">\n                        <Nav\n                            className=\"nav-fill flex-column-reverse flex-sm-row-reverse\"\n                            pills\n                        >\n                            <NavItem className=\"flex-grow-0\">\n                                <NavLink\n                                    className=\"mb-sm-3 mb-md-0\"\n                                    onClick={submitForm}\n                                    disabled={processing}\n                                    href=\"#\"\n                                >\n                                    <i className=\"fas fa-save mr-2\" />\n                                    Save\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Col>\n                </Row>\n                <Card className=\"shadow\">\n                    <CardBody>\n                        <FormGroup\n                            className={classNames({\n                                \"has-danger\": !!errors.name,\n                            })}\n                        >\n                            <Label for=\"create-simulation-name\">Name</Label>\n                            <Input\n                                id=\"create-simulation-name\"\n                                placeholder=\"Name\"\n                                type=\"text\"\n                                value={data.name}\n                                invalid={!!errors.name}\n                                onChange={(e) =>\n                                    setData(\"name\", e.target.value)\n                                }\n                            />\n                            <FormFeedback\n                                tag=\"span\"\n                                className=\"invalid-feedback\"\n                                style={{ display: \"block\" }}\n                            >\n                                <strong>{errors.name}</strong>\n                            </FormFeedback>\n                        </FormGroup>\n                        <FormGroup\n                            className={classNames({\n                                \"has-danger\": !!errors.email,\n                            })}\n                        >\n                            <Label for=\"create-simulation-email\">E-mail</Label>\n                            <Input\n                                id=\"create-simulation-email\"\n                                placeholder=\"Email\"\n                                type=\"email\"\n                                autoComplete=\"new-email\"\n                                value={data.email}\n                                invalid={!!errors.email}\n                                onChange={(e) =>\n                                    setData(\"email\", e.target.value)\n                                }\n                            />\n                            <FormFeedback\n                                tag=\"span\"\n                                className=\"invalid-feedback\"\n                                style={{ display: \"block\" }}\n                            >\n                                <strong>{errors.email}</strong>\n                            </FormFeedback>\n                        </FormGroup>\n                        <FormGroup\n                            className={classNames({\n                                \"has-danger\": !!errors.password,\n                            })}\n                        >\n                            <Label for=\"create-simulation-password\">\n                                Password\n                            </Label>\n                            <Input\n                                id=\"create-simulation-password\"\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                autoComplete=\"new-password\"\n                                value={data.password}\n                                invalid={!!errors.password}\n                                onChange={(e) =>\n                                    setData(\"password\", e.target.value)\n                                }\n                            />\n                            <FormFeedback\n                                tag=\"span\"\n                                className=\"invalid-feedback\"\n                                style={{ display: \"block\" }}\n                            >\n                                <strong>{errors.password}</strong>\n                            </FormFeedback>\n                        </FormGroup>\n                        <FormGroup\n                            className={classNames({\n                                \"has-danger\": !!errors.password_confirmation,\n                            })}\n                        >\n                            <Label for=\"create-simulation-password-confirmation\">\n                                Confirm Password\n                            </Label>\n                            <Input\n                                id=\"create-simulation-password-confirmation\"\n                                placeholder=\"Confirm Password\"\n                                type=\"password\"\n                                autoComplete=\"new-password-confirmation\"\n                                value={data.password_confirmation}\n                                invalid={!!errors.password_confirmation}\n                                onChange={(e) =>\n                                    setData(\n                                        \"password_confirmation\",\n                                        e.target.value\n                                    )\n                                }\n                            />\n                            <FormFeedback\n                                tag=\"span\"\n                                className=\"invalid-feedback\"\n                                style={{ display: \"block\" }}\n                            >\n                                <strong>{errors.password_confirmation}</strong>\n                            </FormFeedback>\n                        </FormGroup>\n                        <FormGroup\n                            className={classNames({\n                                \"has-danger\": !!errors.role_id,\n                            })}\n                        >\n                            <Label for=\"create-simulation-role_id\">Role</Label>\n                            <Input\n                                id=\"create-simulation-role_id\"\n                                type=\"select\"\n                                value={data.role_id}\n                                invalid={!!errors.role_id}\n                                onChange={(e) =>\n                                    setData(\"role_id\", +e.target.value)\n                                }\n                            >\n                                {Object.entries(roles).map(([id, name]) => (\n                                    <option value={id} key={id}>\n                                        {name}\n                                    </option>\n                                ))}\n                            </Input>\n                            <FormFeedback\n                                tag=\"span\"\n                                className=\"invalid-feedback\"\n                                style={{ display: \"block\" }}\n                            >\n                                <strong>{errors.role_id}</strong>\n                            </FormFeedback>\n                        </FormGroup>\n                    </CardBody>\n                </Card>\n            </Container>\n        </Form>\n    );\n};\n\nexport default Index;\n"],"sourceRoot":""}