{"version":3,"sources":["webpack:///./resources/js/Hooks/useDispatcherEvent.ts","webpack:///./resources/js/Modules/Simulations/WikiPlugins/PartialCorrelationGraph.tsx"],"names":["useDispatcherEventWithSender","eventName","callback","connectTo","deps","dispatcher","useEffect","on","off","useDispatcherEvent","data","sender","includes","simulation","title","height","top","n","direction","connectedTo","selectionProps","useState","state","setState","compareWith","fn","useEndpoints","usePerturbation","selectionState","setSelectionState","error","message","then","e","response","selection","prevState","color","className","min","Math","y","max","range","abs","cmin","type","marker","cmax","colorscale","showscale","layout","bargap","yaxis","font","size","autosize","showlegend","config","responsive","style","width","useResizeHandler"],"mappings":"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","file":"js/863.js?id=89d94f34bd58be0a1ab1","sourcesContent":["import { DependencyList, useEffect } from \"react\";\nimport { useDispatcher } from \"../Contexts/DispatcherProvider\";\n\ninterface Identifiable {\n    sender: string;\n}\n\nexport default function useDispatcherEvent<T>(\n    eventName: string,\n    callback: (data: T) => void,\n    deps?: DependencyList\n): void {\n    const dispatcher = useDispatcher();\n    useEffect(\n        () => {\n            dispatcher.on(eventName, callback);\n            return () => {\n                dispatcher.off(eventName, callback);\n            };\n        },\n        deps ? [...deps, callback] : deps\n    );\n}\n\nexport function useDispatcherEventWithSender<T extends Identifiable>(\n    eventName: string,\n    callback: (data: T) => void,\n    connectTo?: string | string[],\n    deps?: DependencyList\n): void {\n    useDispatcherEvent<T>(\n        eventName,\n        (data) => {\n            const { sender } = data;\n            if (\n                connectTo &&\n                ((typeof connectTo === \"string\" && sender === connectTo) ||\n                    connectTo.includes(sender))\n            ) {\n                callback(data);\n            }\n        },\n        deps ? [...deps, callback, connectTo] : deps\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport route from \"ziggy-js\";\nimport { Alert } from \"reactstrap\";\nimport Plot from \"react-plotly.js\";\nimport { useDispatcherEventWithSender } from \"../../../Hooks/useDispatcherEvent\";\nimport { SelectedSimulation } from \"./CorrelationGraph\";\n\ninterface Props {\n    id?: string;\n    simulation: number;\n    compareWith?: number;\n    fn?: \"pearson\" | \"spearman\";\n    top?: boolean;\n    n?: number;\n    direction?: \"positive\" | \"negative\" | \"both\";\n    useEndpoints?: boolean;\n    usePerturbation?: boolean;\n    title?: string;\n    height?: number;\n    connectedTo?: string;\n}\n\ninterface Data {\n    x: string[];\n    y: number[];\n}\n\ninterface State {\n    data?: Data;\n    error?: boolean;\n    message?: string;\n}\n\ninterface SelectionState {\n    compareWith?: number;\n    fn?: \"pearson\" | \"spearman\";\n    useEndpoints?: boolean;\n    usePerturbation?: boolean;\n}\n\nconst PartialCorrelationGraph: React.FC<Props> = ({\n    simulation,\n    title,\n    height = 600,\n    top = false,\n    n = 10,\n    direction = \"negative\",\n    connectedTo,\n    ...selectionProps\n}: Props) => {\n    const [state, setState] = useState<State>({});\n    const [selectionState, setSelectionState] = useState<SelectionState>({\n        compareWith: selectionProps.compareWith,\n        fn: selectionProps.fn,\n        useEndpoints: selectionProps.useEndpoints,\n        usePerturbation: selectionProps.useEndpoints,\n    });\n\n    const { data, error, message } = state;\n    const { compareWith, fn, useEndpoints, usePerturbation } = selectionState;\n\n    useEffect(() => {\n        setState({});\n        if (compareWith && compareWith > 0) {\n            axios\n                .post<Data>(\n                    route(\"simulations.plugins.partialCorrelation\", simulation),\n                    {\n                        compareWith,\n                        fn,\n                        top,\n                        n,\n                        direction,\n                        useEndpoints,\n                        usePerturbation,\n                    }\n                )\n                .then(({ data }) => {\n                    setState({ data });\n                })\n                .catch((e) => {\n                    setState({\n                        error: true,\n                        message: e.response.data.message ?? e.message,\n                    });\n                });\n        }\n    }, [\n        simulation,\n        compareWith,\n        fn,\n        top,\n        n,\n        direction,\n        useEndpoints,\n        usePerturbation,\n    ]);\n\n    useDispatcherEventWithSender<SelectedSimulation>(\n        \"onCorrelationGraphBarClick\",\n        (selection) => {\n            setSelectionState((prevState) => ({\n                ...prevState,\n                ...selection,\n            }));\n        },\n        connectedTo,\n        [setSelectionState]\n    );\n\n    if (!compareWith || compareWith < 0) {\n        return (\n            <Alert color=\"primary\">\n                <i className=\"fas fa-exclamation-circle mx-2\" />\n                Click on a bar in the correlation graph to display its details.\n            </Alert>\n        );\n    }\n\n    if (error) {\n        return <p className=\"text-red\">{message}</p>;\n    }\n\n    const min = data ? Math.min(...data.y) : 0;\n    const max = data ? Math.max(...data.y) : 0;\n    const range = Math.max(Math.abs(min), Math.abs(max));\n    const cmin = -range;\n    // const cdiff = data ? cmax - cmin : 0;\n\n    return (\n        <>\n            {!!data && (\n                <>\n                    <div className=\"d-flex flex-grow-1\">\n                        <Plot\n                            data={[\n                                {\n                                    ...data,\n                                    type: \"bar\",\n                                    marker: {\n                                        color: data.y,\n                                        cmin: cmin,\n                                        cmax: range,\n                                        colorscale: [\n                                            [0, \"rgb(5,10,172)\"],\n                                            [0.35, \"rgb(106,137,247)\"],\n                                            [0.5, \"rgb(255,255,255)\"],\n                                            [0.6, \"rgb(220,170,132)\"],\n                                            [0.7, \"rgb(230,145,90)\"],\n                                            [1, \"rgb(178,10,28)\"],\n                                        ],\n                                        showscale: true,\n                                    },\n                                },\n                            ]}\n                            layout={{\n                                bargap: 0,\n                                yaxis: {\n                                    title:\n                                        fn === \"pearson\"\n                                            ? \"Pearson Correlation\"\n                                            : \"Spearman Correlation\",\n                                    // range: [-1, 1],\n                                },\n                                font: { size: 12 },\n                                autosize: true,\n                                showlegend: false,\n                                title,\n                            }}\n                            config={{\n                                responsive: true,\n                            }}\n                            style={{\n                                width: \"100%\",\n                                height: `${height}px`,\n                            }}\n                            useResizeHandler\n                        />\n                    </div>\n                </>\n            )}\n            {!data && (\n                <Alert color=\"primary\">\n                    <i className=\"fas fa-circle-notch fa-spin mx-2\" />\n                    Building image. Please wait...\n                </Alert>\n            )}\n        </>\n    );\n};\n\nexport default PartialCorrelationGraph;\n"],"sourceRoot":""}