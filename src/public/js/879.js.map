{"version":3,"sources":["webpack:///./resources/js/Modules/Simulations/WikiPlugins/CorrelationGraph.tsx"],"names":["id","simulation","title","height","fn","top","n","direction","useEndpoints","usePerturbation","findByTags","searchMode","useState","state","setState","dispatcher","data","error","message","useEffect","length","then","e","response","className","type","marker","color","y","map","cmin","cmax","colorscale","showscale","layout","bargap","yaxis","range","font","size","autosize","showlegend","config","responsive","style","width","useResizeHandler","onClick","event","points","customdata","dispatch","sender","compareWith"],"mappings":"wZAmMA,QAvJ0C,SAAC,G,IACvCA,EAAE,KACFC,EAAU,aACVC,EAAK,QACL,IAAAC,cAAM,IAAG,MAAG,EACZ,IAAAC,UAAE,IAAG,YAAS,EACd,IAAAC,WAAG,IAAG,GAAK,EACX,IAAAC,SAAC,IAAG,KAAE,EACN,IAAAC,iBAAS,IAAG,aAAU,EACtB,IAAAC,oBAAY,IAAG,GAAI,EACnB,IAAAC,uBAAe,IAAG,GAAK,EACvBC,EAAU,aACV,IAAAC,kBAAU,IAAG,QAAK,EAEZ,GAAoB,IAAAC,UAAgB,IAAnCC,EAAK,KAAEC,EAAQ,KAChBC,GAAa,SAEXC,EAAyBH,EAArB,KAAEI,EAAmBJ,EAAd,MAAEK,EAAYL,EAAL,QAyC5B,OAvCA,IAAAM,YAAU,WACNL,EAAS,IACLJ,GAAcA,EAAWU,OAAS,GAClC,SAEQ,IAAM,kCAAmCnB,GACzC,CACIG,GAAE,EACFC,IAAG,EACHC,EAAC,EACDC,UAAS,EACTC,aAAY,EACZC,gBAAe,EACfC,WAAU,EACVC,WAAU,IAGjBU,MAAK,SAAC,G,IAAEL,EAAI,OACTF,EAAS,CAAEE,KAAI,OAfvB,OAiBW,SAACM,G,MACJR,EAAS,CACLG,OAAO,EACPC,QAAgC,QAAvB,EAAAI,EAAEC,SAASP,KAAKE,eAAO,QAAII,EAAEJ,eAIvD,CACCjB,EACAG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IAGCD,GAAoC,IAAtBA,EAAWU,OAU1BH,EACO,qBAAGO,UAAU,YAAYN,GAIhC,kCACOF,GACC,gCACI,uBAAKQ,UAAU,sBACX,gBAAC,IAAI,CACDR,KAAM,C,OAEKA,GAAI,CACPS,KAAM,MACNC,OAAQ,CACJC,MAAOX,EAAKY,EAAEC,KAAI,SAACD,GAAM,OAACA,EAAI,GAAL,KACzBE,MAAO,EACPC,KAAM,EACNC,WAAY,CACR,CAAC,EAAG,iBACJ,CAAC,IAAM,oBACP,CAAC,GAAK,oBACN,CAAC,GAAK,oBACN,CAAC,GAAK,mBACN,CAAC,EAAG,mBAERC,WAAW,MAIvBC,OAAQ,CACJC,OAAQ,EACRC,MAAO,CACHlC,MACW,YAAPE,EACM,sBACA,uBACViC,MAAO,EAAE,EAAG,IAEhBC,KAAM,CAAEC,KAAM,IACdC,UAAU,EACVC,YAAY,EACZvC,MAAK,GAETwC,OAAQ,CACJC,YAAY,GAEhBC,MAAO,CACHC,MAAO,OACP1C,OAAWA,EAAM,MAErB2C,kBAAgB,EAChBC,QAAS,SAACC,GACN,GAAIhD,GAAMgD,EAAMC,OAAO7B,OAAS,EAAG,CAC/B,IACM,EADQ4B,EAAMC,OAAO,GAEjBC,WACVnC,EAAWoC,SACP,6BACA,CACIC,OAAQpD,EACRqD,YAAa,EAAK,GAClBjD,GAAI,EAAK,GACTI,eAAgB,EAAK,GACrBC,kBAAmB,EAAK,YAStDO,GACE,gBAAC,IAAK,CAACW,MAAM,WACT,qBAAGH,UAAU,qCAET,mCArFZ,gBAAC,IAAK,CAACG,MAAM,WACT,qBAAGH,UAAU,mCAGT","file":"js/879.js?id=980ca39180ffcc6855af","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport route from \"ziggy-js\";\nimport { Alert } from \"reactstrap\";\nimport Plot from \"react-plotly.js\";\nimport { useDispatcher } from \"../../../Contexts/DispatcherProvider\";\n\nexport interface SelectedSimulation {\n    sender: string;\n    compareWith: number;\n    fn?: \"pearson\" | \"spearman\";\n    useEndpoints: boolean;\n    usePerturbation: boolean;\n}\n\ninterface Props {\n    id?: string;\n    simulation: number;\n    fn?: \"pearson\" | \"spearman\";\n    top?: boolean;\n    n?: number;\n    direction?: \"positive\" | \"negative\";\n    useEndpoints?: boolean;\n    usePerturbation?: boolean;\n    findByTags: string[];\n    searchMode?: \"all\" | \"any\";\n    title?: string;\n    height?: number;\n}\n\ntype CustomData = [number, \"pearson\" | \"spearman\", number, number];\n\ninterface Data {\n    x: string[];\n    y: number[];\n    customdata: CustomData[];\n}\n\ninterface State {\n    data?: Data;\n    error?: boolean;\n    message?: string;\n}\n\nconst CorrelationGraph: React.FC<Props> = ({\n    id,\n    simulation,\n    title,\n    height = 600,\n    fn = \"pearson\",\n    top = false,\n    n = 10,\n    direction = \"negative\",\n    useEndpoints = true,\n    usePerturbation = false,\n    findByTags,\n    searchMode = \"all\",\n}: Props) => {\n    const [state, setState] = useState<State>({});\n    const dispatcher = useDispatcher();\n\n    const { data, error, message } = state;\n\n    useEffect(() => {\n        setState({});\n        if (findByTags && findByTags.length > 0) {\n            axios\n                .post<Data>(\n                    route(\"simulations.plugins.correlation\", simulation),\n                    {\n                        fn,\n                        top,\n                        n,\n                        direction,\n                        useEndpoints,\n                        usePerturbation,\n                        findByTags,\n                        searchMode,\n                    }\n                )\n                .then(({ data }) => {\n                    setState({ data });\n                })\n                .catch((e) => {\n                    setState({\n                        error: true,\n                        message: e.response.data.message ?? e.message,\n                    });\n                });\n        }\n    }, [\n        simulation,\n        fn,\n        top,\n        n,\n        direction,\n        useEndpoints,\n        usePerturbation,\n        findByTags,\n        searchMode,\n    ]);\n\n    if (!findByTags || findByTags.length === 0) {\n        return (\n            <Alert color=\"primary\">\n                <i className=\"fas fa-exclamation-circle mx-2\" />\n                You cannot view any graph until you select at lest two\n                simulations through their tags.\n            </Alert>\n        );\n    }\n\n    if (error) {\n        return <p className=\"text-red\">{message}</p>;\n    }\n\n    return (\n        <>\n            {!!data && (\n                <>\n                    <div className=\"d-flex flex-grow-1\">\n                        <Plot\n                            data={[\n                                {\n                                    ...data,\n                                    type: \"bar\",\n                                    marker: {\n                                        color: data.y.map((y) => (y + 1) / 2),\n                                        cmin: -1,\n                                        cmax: 1,\n                                        colorscale: [\n                                            [0, \"rgb(5,10,172)\"],\n                                            [0.35, \"rgb(106,137,247)\"],\n                                            [0.5, \"rgb(255,255,255)\"],\n                                            [0.6, \"rgb(220,170,132)\"],\n                                            [0.7, \"rgb(230,145,90)\"],\n                                            [1, \"rgb(178,10,28)\"],\n                                        ],\n                                        showscale: true,\n                                    },\n                                },\n                            ]}\n                            layout={{\n                                bargap: 0,\n                                yaxis: {\n                                    title:\n                                        fn === \"pearson\"\n                                            ? \"Pearson Correlation\"\n                                            : \"Spearman Correlation\",\n                                    range: [-1, 1],\n                                },\n                                font: { size: 12 },\n                                autosize: true,\n                                showlegend: false,\n                                title,\n                            }}\n                            config={{\n                                responsive: true,\n                            }}\n                            style={{\n                                width: \"100%\",\n                                height: `${height}px`,\n                            }}\n                            useResizeHandler\n                            onClick={(event) => {\n                                if (id && event.points.length > 0) {\n                                    const point = event.points[0];\n                                    const data =\n                                        point.customdata as unknown as CustomData;\n                                    dispatcher.dispatch<SelectedSimulation>(\n                                        \"onCorrelationGraphBarClick\",\n                                        {\n                                            sender: id,\n                                            compareWith: data[0],\n                                            fn: data[1],\n                                            useEndpoints: !!data[2],\n                                            usePerturbation: !!data[3],\n                                        }\n                                    );\n                                }\n                            }}\n                        />\n                    </div>\n                </>\n            )}\n            {!data && (\n                <Alert color=\"primary\">\n                    <i className=\"fas fa-circle-notch fa-spin mx-2\" />\n                    Building image. Please wait...\n                </Alert>\n            )}\n        </>\n    );\n};\n\nexport default CorrelationGraph;\n"],"sourceRoot":""}